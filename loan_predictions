{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 262,
   "id": "0fac7271-cf42-42b4-98ea-998f1e708376",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "08d4a87f-8457-4ea4-85d7-c623429deda6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('loan_data.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "id": "bff105a4-6b00-4188-9f8e-5f299f1e5286",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001008</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001013</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2333</td>\n",
       "      <td>1516.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_ID Gender Married Dependents     Education Self_Employed  \\\n",
       "0  LP001003   Male     Yes          1      Graduate            No   \n",
       "1  LP001005   Male     Yes          0      Graduate           Yes   \n",
       "2  LP001006   Male     Yes          0  Not Graduate            No   \n",
       "3  LP001008   Male      No          0      Graduate            No   \n",
       "4  LP001013   Male     Yes          0  Not Graduate            No   \n",
       "\n",
       "   ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0             4583             1508.0       128.0             360.0   \n",
       "1             3000                0.0        66.0             360.0   \n",
       "2             2583             2358.0       120.0             360.0   \n",
       "3             6000                0.0       141.0             360.0   \n",
       "4             2333             1516.0        95.0             360.0   \n",
       "\n",
       "   Credit_History Property_Area Loan_Status  \n",
       "0             1.0         Rural           N  \n",
       "1             1.0         Urban           Y  \n",
       "2             1.0         Urban           Y  \n",
       "3             1.0         Urban           Y  \n",
       "4             1.0         Urban           Y  "
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "c81dc52a-538f-4713-99fd-b5ee81958b41",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 381 entries, 0 to 380\n",
      "Data columns (total 13 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Loan_ID            381 non-null    object \n",
      " 1   Gender             376 non-null    object \n",
      " 2   Married            381 non-null    object \n",
      " 3   Dependents         373 non-null    object \n",
      " 4   Education          381 non-null    object \n",
      " 5   Self_Employed      360 non-null    object \n",
      " 6   ApplicantIncome    381 non-null    int64  \n",
      " 7   CoapplicantIncome  381 non-null    float64\n",
      " 8   LoanAmount         381 non-null    float64\n",
      " 9   Loan_Amount_Term   370 non-null    float64\n",
      " 10  Credit_History     351 non-null    float64\n",
      " 11  Property_Area      381 non-null    object \n",
      " 12  Loan_Status        381 non-null    object \n",
      "dtypes: float64(4), int64(1), object(8)\n",
      "memory usage: 38.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "570c62b8-dc0c-4e73-b94e-9b978fa5d53f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Loan_ID               0\n",
       "Gender                5\n",
       "Married               0\n",
       "Dependents            8\n",
       "Education             0\n",
       "Self_Employed        21\n",
       "ApplicantIncome       0\n",
       "CoapplicantIncome     0\n",
       "LoanAmount            0\n",
       "Loan_Amount_Term     11\n",
       "Credit_History       30\n",
       "Property_Area         0\n",
       "Loan_Status           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "id": "10e05034-04be-47ed-b0e9-16372cdddc95",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.dropna(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "id": "8192b4f2-3c4a-4d24-89b0-00f1c05aae2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Loan_ID              0\n",
       "Gender               0\n",
       "Married              0\n",
       "Dependents           0\n",
       "Education            0\n",
       "Self_Employed        0\n",
       "ApplicantIncome      0\n",
       "CoapplicantIncome    0\n",
       "LoanAmount           0\n",
       "Loan_Amount_Term     0\n",
       "Credit_History       0\n",
       "Property_Area        0\n",
       "Loan_Status          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "28c00262-e661-4616-ab06-521759047caa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "94a5c9f9-2539-4ef2-a85c-ae3c580f6f69",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Loan_ID', 'Gender', 'Married', 'Dependents', 'Education',\n",
       "       'Self_Employed', 'ApplicantIncome', 'CoapplicantIncome', 'LoanAmount',\n",
       "       'Loan_Amount_Term', 'Credit_History', 'Property_Area', 'Loan_Status'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "b564547e-4404-4172-891d-11538922a295",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Frequency')"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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zm5wm1qthre3d73tUVFR1udGoxEFBQUNBoIrCQkJqTeo/c8+/vhjxMfHY8OGDTZ/dnq9vlnnkktTPmNQUFCjf/4ArD/v16ruOJ9//jni4uLsckyiOmwBImqAv78//vrXv+KRRx5BYWEhLl68CMDyr2UA9f51fv311wOwfPldbt++fUhOTsaYMWMAAIMGDYJGo8GGDRts9tu9e3ezujwkSbLWUufo0aNtsvZL586dERUVhXXr1tkMLq+oqMAXX3xhnRnWXM39TBs3brRpUSkrK8PXX3+NESNGQKlU2uz7ySef2Dz/3//+B6PReMVZaQ25+eabsW3bNpw+ffqKn0OtVtuEn+zs7AZngTVVYz93raEpn3HMmDE4efIkDh48aLP9ww8/hCRJGD16tF1qufHGG6FSqZCSktJgy27//v3tch5yT2wBIqo1ceJEJCYmon///ggJCUFqaipWrFiBuLg4JCQkAAB69OgBAHj99dcxY8YMeHh4oHPnzujcuTP+8Y9/4D//+Q8UCgVuvvlm6yywmJgYPP744wAsTf7z5s3D4sWLERAQgEmTJiEjIwMvvPACIiIibMZJXMmECRPw0ksvYeHChRg5ciROnz6NF198EfHx8Q3OgrMnhUKBpUuXYurUqZgwYQIefPBB6PV6LFu2DMXFxViyZEmLjtvcz6RUKjF27FjMmzcPZrMZr776KkpLS/HCCy/U23fjxo1QqVQYO3asdRZYr1696o3FupoXX3wR33//Pa677jo899xz6NGjB4qLi7F582bMmzcPXbp0wYQJE7Bx40bMmjULf/3rX5Geno6XXnoJEREROHv2bIuuTWM/d5ePHbKXpnzGxx9/HB9++CHGjx+PF198EXFxcfj222/x9ttv4+GHH7bbYpft2rXDiy++iAULFuD8+fO46aabEBAQgJycHOzduxdeXl4N/nkTNQUDEFGt0aNH44svvsB///tflJaWIjw8HGPHjsXzzz9vnSo9atQozJ8/H2vXrsX7778Ps9mMbdu2WbtuOnTogFWrVuGtt96Cn58fbrrpJixevNimq+WVV16Bl5cX3nnnHaxevRpdunTBypUrsWDBAvj7+zep1gULFqCyshKrVq3C0qVL0a1bN7zzzjvYtGlTmwwMnTJlCry8vLB48WLceeedUCqVGDx4MLZt24ahQ4e26JjN/UyzZ89GdXU1Hnvs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0ub1trzOaWlpmDhxIry8vBAcHIzHHnsMBoOheR+oVW6w4QLWr18vPDw8xPvvvy9Onjwp5syZI7y8vERqaqrcpTmFG2+8UaxevVocP35cHD58WIwfP17ExsaK8vJy6z5LliwRPj4+4osvvhDHjh0Td955p4iIiBClpaXWfR566CERFRUltm7dKg4ePChGjx4tevXqJYxGo3Wfm266SSQmJoqdO3eKnTt3isTERDFhwoQ2/byOaO/evaJdu3aiZ8+eYs6cOdbtvO6to7CwUMTFxYl7771X7NmzR1y4cEH8+OOP4ty5c9Z9eO3t7+WXXxZBQUHim2++ERcuXBCfffaZ8Pb2FitWrLDuw+tuH999951YsGCB+OKLLwQAsWnTJpvX2+o6G41GkZiYKEaPHi0OHjwotm7dKiIjI8Xs2bOb9XkYgBoxcOBA8dBDD9ls69Kli3j22Wdlqsi55ebmCgBix44dQgghzGazCA8PF0uWLLHuU11dLfz8/MQ777wjhBCiuLhYeHh4iPXr11v3yczMFAqFQmzevFkIIcTJkycFALF7927rPrt27RIAxKlTp9riozmksrIykZCQILZu3SpGjhxpDUC87q3nmWeeEcOHD2/0dV771jF+/Hhx//3322ybPHmymDZtmhCC1721/DkAteV1/u6774RCoRCZmZnWfT799FOh0WhESUlJkz8Du8AaYDAYcODAAYwbN85m+7hx47Bz506ZqnJuJSUlAIDAwEAAwIULF5CdnW1zjTUaDUaOHGm9xgcOHEBNTY3NPpGRkUhMTLTus2vXLvj5+WHQoEHWfQYPHgw/Pz+3/rN65JFHMH78eNxwww0223ndW89XX32F/v37429/+xtCQ0PRp08fvP/++9bXee1bx/Dhw/HTTz/hzJkzAIAjR47gt99+wy233AKA172ttOV13rVrFxITE21uknrjjTdCr9fbdDlfjVOsBN3W8vPzYTKZ6t1xPiwsrN6d6enqhBCYN28ehg8fjsTERACwXseGrnFqaqp1H7VajYCAgHr71L0/OzsboaGh9c4ZGhrqtn9W69evx8GDB7Fv3756r/G6t57z589j5cqVmDdvHp577jns3bsXjz32GDQaDaZPn85r30qeeeYZlJSUoEuXLlAqlTCZTHjllVdw9913A+DPfFtpy+ucnZ1d7zwBAQFQq9XN+rNgALoCSZJsngsh6m2jq5s9ezaOHj2K3377rd5rLbnGf96nof3d9c8qPT0dc+bMwZYtW+Dp6dnofrzu9mc2m9G/f38sWrQIANCnTx+cOHECK1euxPTp06378drb14YNG/Dxxx9j3bp16N69Ow4fPoy5c+ciMjISM2bMsO7H69422uo62+PPgl1gDQgODoZSqayXJHNzc+ulTrqyRx99FF999RW2bduG6Oho6/bw8HAAuOI1Dg8Ph8FgQFFR0RX3ycnJqXfevLw8t/yzOnDgAHJzc9GvXz+oVCqoVCrs2LEDb7zxBlQqlfWa8LrbX0REBLp162azrWvXrkhLSwPAn/nW8tRTT+HZZ5/FXXfdhR49euCee+7B448/jsWLFwPgdW8rbXmdw8PD652nqKgINTU1zfqzYABqgFqtRr9+/bB161ab7Vu3bsXQoUNlqsq5CCEwe/ZsbNy4ET///DPi4+NtXo+Pj0d4eLjNNTYYDNixY4f1Gvfr1w8eHh42+2RlZeH48ePWfYYMGYKSkhLs3bvXus+ePXtQUlLiln9WY8aMwbFjx3D48GHro3///pg6dSoOHz6M9u3b87q3kmHDhtVb6uHMmTOIi4sDwJ/51lJZWQmFwvarTKlUWqfB87q3jba8zkOGDMHx48eRlZVl3WfLli3QaDTo169f04tu8nBpN1M3DX7VqlXi5MmTYu7cucLLy0tcvHhR7tKcwsMPPyz8/PzE9u3bRVZWlvVRWVlp3WfJkiXCz89PbNy4URw7dkzcfffdDU6ZjI6OFj/++KM4ePCguP766xucMtmzZ0+xa9cusWvXLtGjRw+3mpp6NZfPAhOC17217N27V6hUKvHKK6+Is2fPik8++UTodDrx8ccfW/fhtbe/GTNmiKioKOs0+I0bN4rg4GDx9NNPW/fhdbePsrIycejQIXHo0CEBQCxfvlwcOnTIujxMW13numnwY8aMEQcPHhQ//vijiI6O5jR4e3rrrbdEXFycUKvVom/fvtYp3HR1ABp8rF692rqP2WwWCxcuFOHh4UKj0YjrrrtOHDt2zOY4VVVVYvbs2SIwMFBotVoxYcIEkZaWZrNPQUGBmDp1qvDx8RE+Pj5i6tSpoqioqA0+pXP4cwDidW89X3/9tUhMTBQajUZ06dJFvPfeezav89rbX2lpqZgzZ46IjY0Vnp6eon379mLBggVCr9db9+F1t49t27Y1+Ht9xowZQoi2vc6pqali/PjxQqvVisDAQDF79mxRXV3drM8jCSFE09uLiIiIiJwfxwARERGR22EAIiIiIrfDAERERERuhwGIiIiI3A4DEBEREbkdBiAiIiJyOwxARERE5HYYgIjomiQlJaF3797W5/feey9uv/122eohImoKBiAiF7Zz504olUrcdNNNbXbO119/HWvWrGmz8wHAqFGjMHfuXLvtR0SujwGIyIV98MEHePTRR/Hbb79Z70re2vz8/ODv798m5yIiaikGICIXVVFRgf/97394+OGHMWHChHqtMtu3b4ckSfj222/Rq1cveHp6YtCgQTh27Jh1nzVr1sDf3x9ffvklOnXqBE9PT4wdOxbp6emNnvfPXWBmsxmvvvoqOnbsCI1Gg9jYWLzyyivW15955hl06tQJOp0O7du3x/PPP4+amhrr63VdbB999BHatWsHPz8/3HXXXSgrK7Oeb8eOHXj99dchSRIkScLFixebdI3atWuHRYsW4f7774ePjw9iY2Px3nvv2eyTkZGBu+66C4GBgfDy8kL//v2xZ88e6+srV65Ehw4doFar0blzZ3z00Uc275ckCe+++y4mTJgAnU6Hrl27YteuXTh37hxGjRoFLy8vDBkyBCkpKTbv+/rrr9GvXz94enqiffv2eOGFF2A0Gpv0uYjo6hiAiFzUhg0b0LlzZ3Tu3BnTpk3D6tWr0dCt/5566in861//wr59+xAaGopbb73VJoBUVlbilVdewdq1a/H777+jtLQUd911V5PrmD9/Pl599VU8//zzOHnyJNatW4ewsDDr6z4+PlizZg1OnjyJ119/He+//z7+/e9/2xwjJSUFX375Jb755ht888032LFjB5YsWQLA0uU2ZMgQ/P3vf0dWVhaysrIQExPT5Ppee+019O/fH4cOHcKsWbPw8MMP49SpUwCA8vJyjBw5EpcuXcJXX32FI0eO4Omnn4bZbAYAbNq0CXPmzMETTzyB48eP48EHH8R9992Hbdu22ZzjpZdewvTp03H48GF06dIFU6ZMwYMPPoj58+dj//79AIDZs2db9//hhx8wbdo0PPbYYzh58iTeffddrFmzxiY4EtE1at69YInIWQwdOlSsWLFCCCFETU2NCA4OFlu3brW+Xndn5/Xr11u3FRQUCK1WKzZs2CCEEGL16tUCgNi9e7d1n+TkZAFA7NmzRwghxMKFC0WvXr2sr8+YMUPcdtttQgjLnbo1Go14//33m1z30qVLRb9+/azPFy5cKHQ6nSgtLbVue+qpp8SgQYOsz/98x/vG/Hm/uLg4MW3aNOtzs9ksQkNDxcqVK4UQQrz77rvCx8dHFBQUNHi8oUOHir///e822/72t7+JW265xfocgPjnP/9pfb5r1y4BQKxatcq67dNPPxWenp7W5yNGjBCLFi2yOe5HH30kIiIirvoZiahp2AJE5IJOnz6NvXv3WltqVCoV7rzzTnzwwQf19h0yZIj1/wMDA9G5c2ckJydbt6lUKvTv39/6vEuXLvD397fZpzHJycnQ6/UYM2ZMo/t8/vnnGD58OMLDw+Ht7Y3nn3++3nildu3awcfHx/o8IiICubm5Vz1/U/Ts2dP6/5IkITw83Hrsw4cPo0+fPggMDGzwvcnJyRg2bJjNtmHDhtW7Npefo671q0ePHjbbqqurUVpaCgA4cOAAXnzxRXh7e1sfdS1clZWV1/BpiaiOSu4CiMj+Vq1aBaPRiKioKOs2IQQ8PDxQVFSEgICAK75fkqQrPm9s259ptdorvr57927cddddeOGFF3DjjTfCz88P69evx2uvvWazn4eHR71z13VDXasrHftq9dftfzkhRL1tl5+j7rWGttWd12w244UXXsDkyZPrnc/T0/OqNRHR1bEFiMjFGI1GfPjhh3jttddw+PBh6+PIkSOIi4vDJ598YrP/7t27rf9fVFSEM2fOoEuXLjbHqxunAlhal4qLi232aUxCQgK0Wi1++umnBl///fffERcXhwULFqB///5ISEhAampqcz8y1Go1TCZTs993NT179sThw4dRWFjY4Otdu3bFb7/9ZrNt586d6Nq16zWdt2/fvjh9+jQ6duxY76FQ8Nc2kT2wBYjIxXzzzTcoKirCzJkz4efnZ/PaX//6V6xatcpmwO2LL76IoKAghIWFYcGCBQgODraZxeXh4YFHH30Ub7zxBjw8PDB79mwMHjwYAwcOvGotnp6eeOaZZ/D0009DrVZj2LBhyMvLw4kTJzBz5kx07NgRaWlpWL9+PQYMGIBvv/0WmzZtavZnbteuHfbs2YOLFy/C29sbgYGBdgkKd999NxYtWoTbb78dixcvRkREBA4dOoTIyEgMGTIETz31FO644w707dsXY8aMwddff42NGzfixx9/vKbz/t///R8mTJiAmJgY/O1vf4NCocDRo0dx7NgxvPzyy9f8uYiILUBELmfVqlW44YYb6oUfAPjLX/6Cw4cP4+DBg9ZtS5YswZw5c9CvXz9kZWXhq6++glqttr6u0+nwzDPPYMqUKRgyZAi0Wi3Wr1/f5Hqef/55PPHEE/i///s/dO3aFXfeead1jM1tt92Gxx9/HLNnz0bv3r2xc+dOPP/8883+zE8++SSUSiW6deuGkJAQu615pFarsWXLFoSGhuKWW25Bjx49sGTJEiiVSgDA7bffjtdffx3Lli1D9+7d8e6772L16tUYNWrUNZ33xhtvxDfffIOtW7diwIABGDx4MJYvX464uDg7fCoiAgBJiAbmxRKRy9u+fTtGjx6NoqKiRhcuXLNmDebOnYvi4uI2rY2IqLWxBYiIiIjcDgMQERERuR12gREREZHbYQsQERERuR0GICIiInI7DEBERETkdhiAiIiIyO0wABEREZHbYQAiIiIit8MARERERG6HAYiIiIjcDgMQERERuZ3/D1s/9m4ikQgoAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(df['ApplicantIncome'],kde = True)\n",
    "plt.title('Histogram of applicant income')\n",
    "plt.xlabel('Applicant Income')\n",
    "plt.ylabel('Frequency')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "8b7ebec5-f54c-4db6-8a15-67a1d75b61bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Loan_Status',data = df)\n",
    "plt.title('Loan status')\n",
    "plt.xlabel('loan Approved')\n",
    "plt.ylabel('count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "905aac29-ca7c-45a9-bef9-28d9d79e8e0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>LoanAmount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Graduate</td>\n",
       "      <td>105.344978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>102.531646</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Education  LoanAmount\n",
       "0      Graduate  105.344978\n",
       "1  Not Graduate  102.531646"
      ]
     },
     "execution_count": 284,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('Education')['LoanAmount'].mean().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "id": "69e4108a-cfe9-47f0-907f-1bc5733542b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Education</th>\n",
       "      <th>LoanAmount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Graduate</td>\n",
       "      <td>105.344978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>102.531646</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Education  LoanAmount\n",
       "0      Graduate  105.344978\n",
       "1  Not Graduate  102.531646"
      ]
     },
     "execution_count": 286,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg_loan_amount_by_education = df.groupby('Education')['LoanAmount'].mean().reset_index()\n",
    "avg_loan_amount_by_education"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "1ef334cd-54f0-4998-9332-fc6728bed7ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x = 'Education',y='LoanAmount',data = avg_loan_amount_by_education)\n",
    "plt.title('avg loan amount vs Education')\n",
    "plt.xlabel('Education')\n",
    "plt.ylabel('LoanAmount')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "69b00e91-b07e-4bb5-96be-a79b4d11f99a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='Property_Area' , y='LoanAmount',data = df)\n",
    "plt.title('Loan Amount By Property Area')\n",
    "plt.xlabel('Property Area')\n",
    "plt.ylabel('Loan Amount')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "id": "0d789ec2-5e8b-45c2-b299-fb0af1511b5f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjsAAAHFCAYAAAAUpjivAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA+5klEQVR4nO3deVRV9f7/8deR4YDKTEyJiJpeDRxQc2gQZxEtp8o0c+hq3yzLazaYmUOmjWq/Sq2uoqal997UTF2aE2ZphTiPmUFqgZgDCCoo7N8fXc/txJAieA7b52OtvRb7sz977/c+gLz87MliGIYhAAAAk6rk6AIAAADKE2EHAACYGmEHAACYGmEHAACYGmEHAACYGmEHAACYGmEHAACYGmEHAACYGmEHAACYGmEHuIHmzp0ri8Wibdu2ObqUa3LgwAH1799fNWvWlIeHhwIDAxUTE6Mnn3xSWVlZtn6ffPKJpk+ffl37mjFjhubOnXt9BTuxgoICLViwQJ06dVJQUJDc3Nzk6+urFi1a6K233tJvv/3mkLoSExNlsViUmJjokP0D5YmwA6BEO3bsUJMmTbR//369/PLLWr16tWbNmqX4+HitWbNGp0+ftvUl7JTswoUL6ty5sx555BH5+/vr//2//6f169drwYIFatu2rd5880316NHD0WUCpuPq6AIAOLfp06erUqVKSkxMlJeXl629d+/eeuWVV8Tr9a7eiBEjtHbtWn3yySd66KGH7JZ17dpVL730khYuXOig6srW+fPnVblyZUeXAUhiZAdwSl9//bXatWsnLy8vVa5cWa1atdLKlSvt+pw8eVLDhg1T/fr1VbVqVQUFBalt27bavHmzXb/U1FRZLBa99dZbmjp1qiIjI1W1alW1bNlS33777V/WcurUKXl7e6tq1apFLrdYLJKk2NhYrVy5Uj///LMsFottumLChAlq3ry5/P395e3trZiYGM2ePdsuLNWoUUP79u3Tpk2bbOvXqFFD0v9OAaamptrtv6jTLzt27FDXrl0VFBQkq9WqsLAwxcfH6/jx48Ue54gRI1SlShW703JXPPjggwoODtalS5ckSRs2bFBsbKwCAgLk6emp6tWrq1evXjp//nyx209LS9OcOXMUHx9fKOhcUblyZQ0ZMsSuzTAMzZgxQ40aNZKnp6f8/PzUu3dv/fTTT3b9YmNjFRUVpaSkJN19992qXLmyatasqddee00FBQV2fQ8ePKjOnTurcuXKCgwM1P/93//p3LlzRda0bt06tWvXTt7e3qpcubLuvPNOrV+/3q7P+PHjZbFYtH37dvXu3Vt+fn6qVatWsZ8FcKMRdgAns2nTJrVt21aZmZmaPXu2Pv30U3l5ealbt25avHixrd+V00fjxo3TypUrlZCQoJo1ayo2NrbI6y7ef/99rV27VtOnT9fChQuVk5OjLl26KDMzs8R6WrZsqbS0NPXr10+bNm3ShQsXiuw3Y8YM3XnnnQoJCdHWrVtt0xWpqal67LHH9K9//UtLlixRz549NXz4cL3yyiu2PkuXLlXNmjXVuHFj2/pLly69lo9POTk56tChg06cOGF3zNWrVy/2D7okDR48WOfPn9e//vUvu/azZ8/q888/18MPPyw3NzelpqYqPj5e7u7umjNnjlavXq3XXntNVapUUV5eXrHb37hxoy5fvqx77733mo7nscce04gRI9S+fXstW7ZMM2bM0L59+9SqVSudOHHCrm96err69eunhx9+WMuXL1dcXJxGjx6tBQsW2PqcOHFCrVu31t69ezVjxgx9/PHHys7O1pNPPllo3wsWLFDHjh3l7e2tefPm6V//+pf8/f3VqVOnQoFHknr27KnatWvr3//+t2bNmnVNxwmUKwPADZOQkGBIMpKSkort06JFCyMoKMg4d+6cre3y5ctGVFSUUa1aNaOgoKDI9S5fvmxcunTJaNeundGjRw9be0pKiiHJiI6ONi5fvmxr//777w1JxqefflpizRcvXjS6d+9uSDIkGS4uLkbjxo2NMWPGGBkZGXZ94+PjjYiIiBK3ZxiGkZ+fb1y6dMmYOHGiERAQYHdMt99+u9G6detC61z57FJSUuzaN27caEgyNm7caBiGYWzbts2QZCxbtuwv6/izmJgYo1WrVnZtM2bMMCQZe/bsMQzDMP7zn/8YkoydO3de07Zfe+01Q5KxevXqQssuXbpkN12xdetWQ5Lx9ttv2/U/duyY4enpaTz33HO2ttatWxuSjO+++86ub/369Y1OnTrZ5p9//nnDYrEUqr9Dhw52n2NOTo7h7+9vdOvWza5ffn6+0bBhQ+OOO+6wtY0bN86QZLz88stX+WkANxYjO4ATycnJ0XfffafevXvbnTZycXFR//79dfz4cR06dMjWPmvWLMXExMjDw0Ourq5yc3PT+vXrdeDAgULbjo+Pl4uLi22+QYMGkqSff/65xJqsVquWLl2q/fv3a9q0aerTp49OnjypV199VfXq1bOrpyQbNmxQ+/bt5ePjIxcXF7m5uenll1/WqVOnlJGRcVXbuBq1a9eWn5+fnn/+ec2aNUv79++/6nUHDRqkLVu22B1TQkKCmjVrpqioKElSo0aN5O7urqFDh2revHmFTiddq507d8rNzc1uunJH1ooVK2SxWPTwww/r8uXLtikkJEQNGzYsNIIXEhKiO+64w66tQYMGdt/jjRs36vbbb1fDhg3t+vXt29dufsuWLTp9+rQGDBhgt++CggJ17txZSUlJysnJsVunV69e1/VZAOWFsAM4kTNnzsgwDIWGhhZaFhYWJun3a2gkaerUqXr88cfVvHlzffbZZ/r222+VlJSkzp07F3mqKSAgwG7earVKUrGnpf6sXr16GjFihBYsWKCjR49q6tSpOnXqlMaOHfuX637//ffq2LGjJOmjjz7SN998o6SkJI0ZM+aaargaPj4+2rRpkxo1aqQXX3xRt99+u8LCwjRu3DjbNTfF6devn6xWq+1usP379yspKUmDBg2y9alVq5bWrVunoKAgPfHEE6pVq5Zq1aqld955p8RtV69eXVLhcFm3bl0lJSUpKSmp0PU6J06ckGEYCg4OLhSIvv3220K3qf/5eyz9/n3+4+d76tQphYSEFOr357Yrp8h69+5daN+vv/66DMOwuxNPUpE/t4Az4G4swIn4+fmpUqVKSktLK7Ts119/lSQFBgZK+v16itjYWM2cOdOuX0nXpZQVi8Wif/zjH5o4caL27t37l/0XLVokNzc3rVixQh4eHrb2ZcuWXfU+r6yXm5tr117Uc2mio6O1aNEiGYah3bt3a+7cuZo4caI8PT31wgsvFLsPPz8/3XfffZo/f74mTZqkhIQEeXh4FLqg+O6779bdd9+t/Px8bdu2Te+++65GjBih4OBg9enTp8htx8bGytXVVcuXL9fQoUNt7Z6enmratKmk30dy/igwMFAWi0WbN2+2hdM/KqrtrwQEBCg9Pb1Q+5/brvycvfvuu2rRokWR2woODrab/+MF6YAzYWQHcCJVqlRR8+bNtWTJErv/jV95EF21atVUp04dSb//YfnzH7vdu3fbXRRcFooKXtLv4SsrK8s24iQVHkW4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1dXw9/c3OnfubLzxxhtGenq6bfnGjRsNScaZM2dKPL7i6tmxY4ddv9atWxtPP/20Xdt9991nDBgwwDAMw/jss88Mb29vIysrq8T9AShbjOwAKFcHDhxQy5YtZbFYbG133nmnsrOzdfz4cUnSkSNH1LdvX9WsWVPe3t6200RHjx6121aDBg1sX4eGhkr6/dqc4rz66qtKT0/XrFmzVL9+fc2aNUt/+9vftGfPnhJrvtp6rlWHDh0UERGhmjVrqn///lq4cCHXDwE3AGEHQLkyDMMu6Fxpk2Rr79atm06dOqWPPvpI3333nb777jtJUl5ent16bm5utq+vrPvnU11/FhAQoPvvv19vv/22Dhw4oLCwML311lslrnO19fxZpUqVCp0yu3Tpku1rLy8vbd++XZ9++qlCQ0P18ssvq2HDhtd8NxiAa0PYAVCu6tevry1bttiFgC1btsjLy0u33nqrTp06pQMHDuill15Su3btVK9ePZ05c6ZcanF3d1etWrWUk5Njm5ek/Px8W5+rqaeo9STplltuUVpamm0+Pz9fe/futevj6uqq9u3b64033tDu3buVmpqqDRs2lN1BAijE1dEFADCHzMzMQs+d8ff317BhwzR9+nQNHz5cTz75pA4dOqRx48Zp5MiRqlSpkvz8/BQQEKAPP/xQoaGhOnr0qF544YXrrmfFihVatGiR+vTpozp16sgwDH3xxRdatWqVEhISJEkRERGyWCxasWKFunTpIk9Pz6uqJygoSJ6enlq9erWqVasmDw8P+fj4qG3btho5cqRWrlypWrVqadq0aXajNitWrNBPP/2ke+65R35+flq1apUKCgpUt27d6z5eACVw6BVDAExhwIABhqRC05ULcxMTE41mzZoZ7u7uRkhIiPH8888bly5dsq2/du1ao169eobVajUaNGhgJCYmGpKMpUuXGoZR9AXBZ86cMSQZGzduLLKmI0eOGEOGDDHq1KljeHp6Gr6+vkazZs2MhIQEu34TJ040QkJCDIvFYqv3r+oxDMP46KOPjPDwcKNSpUpG69atDcMwjLy8POPxxx83/P39jaCgIGPKlCl2Fyhv3rzZaN26teHn52d4enoaDRo0MBYvXlzKTx3A1bIYRhH3ZAIAAJgE1+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABTI+wAAABT+/8MHtOughJ/lAAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Loan_Status' ,hue='Gender',data = df)\n",
    "plt.title('Loan Status vs Gender')\n",
    "plt.xlabel('Loan Status')\n",
    "plt.ylabel('Count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "id": "17c17482-01e6-4ab0-8dc4-25e20fe2c700",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Gender'].value_counts().plot(kind = 'pie')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "id": "d932ca3e-4d8b-4877-88fd-9ea827b7e577",
   "metadata": {},
   "outputs": [],
   "source": [
    "loan_status_by_married = df.groupby('Married')['Loan_Status'].value_counts().unstack()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "id": "47bbebeb-2990-4616-bab5-9dc257122443",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "loan_status_by_married.plot(kind = 'bar',stacked = True)\n",
    "plt.title('Loan status vs Married')\n",
    "plt.xlabel('Loan_Status')\n",
    "plt.ylabel('Married')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "d680d87a-ec3b-4357-9a42-16d31c9f695b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x='ApplicantIncome',y='LoanAmount',data =df)\n",
    "plt.title('Applicant income vs LoanAmount')\n",
    "plt.xlabel('Income')\n",
    "plt.ylabel('Loan')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 302,
   "id": "c78e57da-e9cd-4e97-9640-26c324b5958a",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_df = df.select_dtypes(include=['int64','float64'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 304,
   "id": "178bcfab-8cbf-418d-a5a8-5ef339e0c5be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2333</td>\n",
       "      <td>1516.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>5703</td>\n",
       "      <td>0.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>3232</td>\n",
       "      <td>1950.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>2900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>4106</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>4583</td>\n",
       "      <td>0.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0               4583             1508.0       128.0             360.0   \n",
       "1               3000                0.0        66.0             360.0   \n",
       "2               2583             2358.0       120.0             360.0   \n",
       "3               6000                0.0       141.0             360.0   \n",
       "4               2333             1516.0        95.0             360.0   \n",
       "..               ...                ...         ...               ...   \n",
       "376             5703                0.0       128.0             360.0   \n",
       "377             3232             1950.0       108.0             360.0   \n",
       "378             2900                0.0        71.0             360.0   \n",
       "379             4106                0.0        40.0             180.0   \n",
       "380             4583                0.0       133.0             360.0   \n",
       "\n",
       "     Credit_History  \n",
       "0               1.0  \n",
       "1               1.0  \n",
       "2               1.0  \n",
       "3               1.0  \n",
       "4               1.0  \n",
       "..              ...  \n",
       "376             1.0  \n",
       "377             1.0  \n",
       "378             1.0  \n",
       "379             1.0  \n",
       "380             0.0  \n",
       "\n",
       "[308 rows x 5 columns]"
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numeric_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "id": "e3097e4b-3319-45e2-aac7-2140d26c979d",
   "metadata": {},
   "outputs": [],
   "source": [
    "correlation_matrix = numeric_df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "23e8a160-d942-40f6-9535-7682d5fb3336",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.243677</td>\n",
       "      <td>0.267628</td>\n",
       "      <td>-0.099571</td>\n",
       "      <td>0.030307</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <td>-0.243677</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.123028</td>\n",
       "      <td>-0.004158</td>\n",
       "      <td>0.012715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LoanAmount</th>\n",
       "      <td>0.267628</td>\n",
       "      <td>0.123028</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.135069</td>\n",
       "      <td>-0.043853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <td>-0.099571</td>\n",
       "      <td>-0.004158</td>\n",
       "      <td>0.135069</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.015269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Credit_History</th>\n",
       "      <td>0.030307</td>\n",
       "      <td>0.012715</td>\n",
       "      <td>-0.043853</td>\n",
       "      <td>0.015269</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   ApplicantIncome  CoapplicantIncome  LoanAmount  \\\n",
       "ApplicantIncome           1.000000          -0.243677    0.267628   \n",
       "CoapplicantIncome        -0.243677           1.000000    0.123028   \n",
       "LoanAmount                0.267628           0.123028    1.000000   \n",
       "Loan_Amount_Term         -0.099571          -0.004158    0.135069   \n",
       "Credit_History            0.030307           0.012715   -0.043853   \n",
       "\n",
       "                   Loan_Amount_Term  Credit_History  \n",
       "ApplicantIncome           -0.099571        0.030307  \n",
       "CoapplicantIncome         -0.004158        0.012715  \n",
       "LoanAmount                 0.135069       -0.043853  \n",
       "Loan_Amount_Term           1.000000        0.015269  \n",
       "Credit_History             0.015269        1.000000  "
      ]
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "bac535ed-b89c-4658-9639-5b1098ff1656",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 310,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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H7OYzczMEBISgr1790rK9+7di/DwcK375ObmQvZIMiuXywGoWx4rAhNEIiIiohdo4sSJ+O6777B69WrEx8djwoQJSEhI0HQZz5gxA0OHDtXU79atG7Zs2YKVK1fi33//xZEjRzBu3Dg0btwYHh4eFRIju5iJiIjIKOnrt5j79++P1NRUzJ8/H4mJiQgKCsLOnTtRvXp1AEBiYqJkTcThw4cjKysLy5cvx6RJk2Bvb4/WrVvjo48+qrAYmSASERGRcdLjbzGPHTsWY8eO1frY2rVrS5W98847eOeddyo4qhJMEImIiMgo6Zo1TByDSERERESPYAsiERERGaXyWubmZcQEkYiIiIySviapGAKmzkREREQkwRZEIiIiMk7sYtaJCSIREREZJXYx68bUmYiIiIgk2IJIL8zijt/oOwSDNmPX/+k7BIN1ccJFfYdgsDyrm+o7BINWVKjSdwj0GILAdjJdmCASERGRcWIXs05MnYmIiIhIgi2IREREZJS4ULZuTBCJiIjIKHEWs25MEImIiMg4cZKKTrwyRERERCTBFkQiIiIySuxi1o0JIhERERknTlLRiVeGiIiIiCTYgkhERERGSRDYxawLE0QiIiIyTuxi1olXhoiIiIgk2IJIRERERomzmHVjgkhERETGiQtl68QrQ0REREQSbEEkIiIi48QuZp2YIBIREZFREtjFrBMTRCIiIjJObEHUiakzEREREUmwBZGIiIiMksCFsnVigkhERETGiT+1pxNTZyIiIiKSYAsiERERGSd2MevEBJGIiIiME7uYdWLqTEREREQSbEEkIiIio8RZzLoxQSQiIiLjxF9S0YlXhoiIiIgk2IJIRERExok/taeTUbQgXr9+HYIgIDY2FgBw4MABCIKA9PR0vcZFRERE+iMIsnLZXkbP1YKYlJSERYsWYceOHbh9+zZcXFxQv359jB8/Hm3atCmvGMtdeHg4EhMTYWdn98Kec+3atRg/fnyppLRly5aoX78+li5d+sJiMSYjB1bHqx3cYWNtgrhLWfjs68u4lpCrs3639m7o2NoNNaorAAAXr2Rj1Q/XEH85S2v9wX28MGZYDWz67RaWfXe1Qs6hMnNsGooak0bBrmEQLDxcENV7LO5u26fvsPTq9MH1OLk3EtkZKXB2r4U2fd+DV61QrXWzM5Kx/+ePcDfhHO6n3EBIyyFo22+m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l5rw2r59exw9elTr8bdt24bQ0FB8/PHHWLduHaysrPDqq69iwYIFT7X8XVlwdCYRERHRc1i8eDHs7Owkm7aWQAC4d+8elEql5kcqHnB1dUVSUpLWff79918cPnwY586dw6+//oqlS5fi559/xltvvVXu5/JApW9BJCIiIqoQ5TSLecaMGZg4caKkTFvroeSpn+JHLR5QqVQQBAHr16+HnZ36p2s+++wz9OnTB1999VWFtCIyQSQiIiLjVE5jEHV1J2vj7OwMuVxeqrUwOTm5VKviA+7u7vD09NQkh4D6hzFEUcStW7dQq1atsgevA7uYiYiIiF4QMzMzhISEYO/evZLyvXv3Ijw8XOs+ERERuHPnDrKzSxbkvHTpEmQyGapWrVohcTJBJCIiIuMkCOWzPaOJEyfiu+++w+rVqxEfH48JEyYgISEBY8aMAaDush46dKim/qBBg+Dk5IQRI0YgLi4Of//9N6ZMmYKRI0dW2CQVdjETERGRcdLTL6k8+FW1+fPnIzExEUFBQdi5cyeqV68OAEhMTERCQoKmvrW1Nfbu3Yt33nkHoaGhcHJyQr9+/bT+1G15YYJIRERE9IKNHTsWY8eO1frY2rVrS5XVrl27VLd0RWKCSERERMZJT7+kYgiYIBIREZFx0tMvqRgCXhkiIiIikmALIhERERklkV3MOjFBJCIiIuOkp1nMhoAJIhERERknJog68coQERERkQRbEImIiMgocQyibkwQiYiIyDixi1knXhkiIiIikmALIhERERkndjHrxASRiIiIjBN/SUUnXhkiIiIikmALIhERERklzmLWjQkiERERGSfOYtaJV4aIiIiIJNiCSEREREZJZAuiTkwQiYiIyDhxDKJOTBCJiIjIKLEFUTdeGSIiIiKSYAsiERERGSd2MevEBJGIiIiME7uYdWKCSC/MRx+F6DsEg3ZxwkV9h2CwXDv46zsEgyXby/vuecScydJ3CAbMTN8BGDUmiERERGSU+EsqujFBJCIiIuPELmadeGWIiIiISIItiERERGSURLCLWRcmiERERGSUuFC2brwyRERERCTBFkQiIiIyTmxB1IkJIhERERklLnOjGxNEIiIiMkocg6gbrwwRERERSbAFkYiIiIwTu5h1YoJIRERERoldzLrxyhARERGRBFsQiYiIyCjxl1R0Y4JIRERERoldzLrxyhAR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1IjnYCNAFEumG1xPVOH7P/LRJcwMncPMcC9DhbV/5OPGXcOdifw8RE7F0EkQHx2URlRBjsS9mBbEl9XFJGt9h2CwXDv46zsEg5Wy96K+QzBoMWey9B2CwfriXd3rW5aXS1fLZ6awX03DGc/6tJg6ExEREZGE0XUxExEREQH6WwfREDBBJCIiIqPEBFE3djETERERkQRbEImIiMgosQVRNyaIREREZJS4ULZuTBCJiIjIKLEFUTeOQSQiIiIiCbYgEhERkVFiC6JuTBCJiIjIKDFB1I1dzEREREQkwRZEIiIiMkqcxawbE0QiIiIySip2MevELmYiIiIikmALIhERERklTlLRjQkiERERGSWOQdSNXcxEREREJMEWRCIiIjJK7GLWjQkiERERGSV2MevGBJGIiIiMElsQdeMYRCIiIiKSYAsiERERGSV2MevGBJGIiIiMkkrfAVRi7GImIiIiIgm2IBIREZFRYhezbkwQiYiIyChxFrNu7GImIiIiIgm2IBIREZFRYhezbkwQiYiIyCixi1k3djETERERkQRbEImIiMgoqUR9R1B5MUEkIiIio8QuZt2YINIL882GbH2HYNA8q5vqOwSDJdt7Ud8hGKwq7fz1HYJBs488p+8Q6DE4SUU3jkEkIiIiIgm2IBIREZFREjkGUScmiERERGSUVByDqBO7mImIiIhIgi2IREREZJQ4SUU3JohERERklDgGUTd2MRMRERGRBFsQiYiIyChxoWzdmCASERGRUeJP7enGBJGIiIiMEiep6MYxiEREREQkwQSRiIiIjJIols9WFitWrICPjw8sLCwQEhKCQ4cO6ay7ZcsWtGvXDlWqVIGtrS3CwsKwe/fuMp7102GCSEREREZJBaFctme1ceNGjB8/HjNnzkRMTAyaNWuGTp06ISEhQWv9v//+G+3atcPOnTsRHR2NVq1aoVu3boiJiXneS6CTIIpcBYhejGGzk/QdgkHzrO6g7xAMll9Nc32HYLCqtPPXdwgG7WTkOX2HYLDmDTWt8OfYfrq4XI7TteGzTelo0qQJGjZsiJUrV2rK6tSpgx49emDx4sVPdYzAwED0798fs2fPfqbnflqcpEJERERGqbyayAoKClBQUCApMzc3h7l56S+nhYWFiI6OxvTp0yXl7du3x9GjR5/q+VQqFbKysuDo6Fj2oJ+AXcxERERklERRKJdt8eLFsLOzk2y6WgLv3bsHpVIJV1dXSbmrqyuSkp6up23JkiXIyclBv379nvsa6MIWRCIiIqLnMGPGDEycOFFSpq318GGCIB27KIpiqTJtfvrpJ8ydOxe//fYbXFxcnj3Yp8QEkYiIiIxSeS2Uras7WRtnZ2fI5fJSrYXJycmlWhUftXHjRowaNQqbN29G27Ztyxzv02AXMxERERklfSxzY2ZmhpCQEOzdu1dSvnfvXoSHh+vc76effsLw4cPxv//9D126dCnL6T4TtiASERERvUATJ07EkCFDEBoairCwMHzzzTdISEjAmDFjAKi7rG/fvo0ffvgBgDo5HDp0KL744gu88sormtZHS0tL2NnZVUiMTBCJiIjIKIllWMOwPPTv3x+pqamYP38+EhMTERQUhJ07d6J69eoAgMTERMmaiKtWrUJxcTHeeustvPXWW5ryYcOGYe3atRUSIxNEIiIiMkrlNQaxLMaOHYuxY8dqfezRpO/AgQMVH9AjmCASERGRUeJPhejGSSpEREREJMEWRCIiIjJKbEHUjQkiERERGSWVqJ9JKoaAXcxEREREJMEWRCIiIjJK7GLWjQkiERERGSUmiLqxi5mIiIiIJJ6pBXH48OFIT0/H1q1bKyic8uHv749r167h2rVr8PT01Hc4T23t2rUYP3480tPTn1j3+vXr8PHxeWydOXPmYO7cueUT3EuiRytrtAyxhJWlDFdvFWHd9kzcTinWWd+zigl6traGt4cpqjjIsf6PTOw5lvsCI64YbRrI0chfDktz4GaKiG1Hi5Gc/viv0oHeMrRrKIejrYD7mSL2RCsRd0MlqdOkjgzN6prAxhJIThex43gxrt/VftweESZoXFuO7ceLcfS8EgBgaQa0bWgCX08BdtYCcvOBuBtK7I1WoqCofM69okUfWI8TeyKRnZGCKh610Lbfe/CqFaq1bnZGMvZt/ghJCedwP/kGQlsNQbv+M3UeO+7UDvz23UTUCm6DPmNXVNQpVHqOTUNRY9Io2DUMgoWHC6J6j8Xdbfv0HdYL1chfhogAGawVQEo68McpJRKSdb+Gq7sK6BgqRxV7ICsXOHJehahLJa/fKnZA6/pyuDsJcLAW8McpJY7HS1/fLYNlaBUsl5Rl5Yn4dLPu99DKTp8LZVd2L10L4uHDh5Gfn4++fftW2M/PVAZeXl5ITEzUbJMmTUJgYKCkbPLkyc90zKIiA/kELqPOTa3QMUyBdTsyMXdVKjKylZgyzAEWZrpnsZmZAilpSmzem4X0LOULjLbiNK8nR0SQHL8fK8aKbUXIzhMxsqMpzEx17+PlImBAKxPEXFHhy1+LEHNFhYGtTVC1Ssm1q+sjQ5cmJjgQW4zlW4twPUmFYR1MYWdV+nh1qstQtYqAjBzpu7OtlQAbBfDHSSWWbSnEz38Xwa+qDL2bGcZomLhTO/HnpsUI7/wmRr6/FVV9Q7Dxy9HIuH9Ha/3iokIobBwQ3ulNuFat/dhjZ6Texv6fP4KXr/Zk05jIrRTIPHsR59+dr+9Q9CLQW0DHUBn+/keJr7cX48ZdFQa3kWt9rQGAvTUwuLUcN+6q8PX2Yhz6R4lOjWSoU63k9WtqIiAtW8Sfp5XIytWdNd1NE/HJpiLNtmKb4SaHACCKQrlsL6NySxAPHjyIxo0bw9zcHO7u7pg+fTqKi0tunF27dqFp06awt7eHk5MTunbtiqtXr2oev379OgRBwJYtW9CqVSsoFAoEBwfj2LFjzxRHZGQkBg0ahCFDhmD16tUQHxlg4O3tjYULF2Lo0KGwtrZG9erV8dtvvyElJQXdu3eHtbU16tati6ioKMl+v/zyCwIDA2Fubg5vb28sWbJE8rggCKVaVu3t7TVJ6pPO78CBAxgxYgQyMjIgCAIEQXhs659cLoebm5tms7a2homJiaRs8+bNqFOnDiwsLFC7dm2sWFHS4vAgnk2bNqFly5awsLDAjz/+iOHDh6NHjx744IMP4OrqCnt7e8ybNw/FxcWYMmUKHB0dUbVqVaxevfqZ/r9UBh3CFNj2dw6i4wtwO7kY327JgJmpgFfqWejc59qdYmzck4UT5/JRZNjvgxrhgXIcOKPE+Rsq3E0TsflgMUxNgPo1dL8dRATKceW2iINnlUjJUP/36h0REYElrQlNg+SIvqRulUjJELHjhBIZOSKa1JG2ONgqgFfDTLDpQDFU0gYK3E0T8b/9xbhwU4X7WcC/iSL2RClRu5oMMgN4Dz755xoER/RG/aZ94exeE+36z4StgxtiDv6ktb69c1W06/8+6ob1gLmljc7jqlRKbIucjGbd3oF9Fa+KCt9gpOz+G5fmLEXS1r36DkUvwuvIEHNFhdNXRNzLAHZFqZCZAzTy0/4abuQnQ0aOut69DOD0FRExV1SICCypfydVxJ5oFc5dF1Gs0noYAOoWt+z8ki23oLzPjiqLckkQb9++jc6dO6NRo0Y4c+YMVq5cicjISCxcuFBTJycnBxMnTsSpU6ewb98+yGQy9OzZE6pHPiFmzpyJyZMnIzY2Fn5+fhg4cKAk0XycrKwsbN68GYMHD0a7du2Qk5Oj9fcLP//8c0RERCAmJgZdunTBkCFDMHToUAwePBinT5+Gr68vhg4dqkkuo6Oj0a9fPwwYMAD//PMP5s6di1mzZpWphVLX+YWHh2Pp0qWwtbUtcwvgw7799lvMnDkTixYtQnx8PD744APMmjUL33//vaTetGnTMG7cOMTHx6NDhw4AgP379+POnTv4+++/8dlnn2Hu3Lno2rUrHBwccOLECYwZMwZjxozBzZs3yxzfi1bFQQ57GznOXSl5NytWAhevF6KWl5keI3uxHGwAW4WAy7dLXndKFXAtSYVqrrrfDqq5yHDltvS1evlWyT5yGeDhLD0uAFy5rUJ1l5LjCgD6tjDFoX+UT+zSfsDCDCgorPxdQcriQiQlnIdPQFNJuU9ABG5djXmuYx/e/hUUNo4Ibtr3uY5Dhk8uA9ydBFy5I31BXE1UwauK9m9RVasIuJr4yGvzjggPJ+GZv3g52QCT+phgfE8T9Gkmh4P1s+1f2Yhi+Wwvo3Lpt1mxYgW8vLywfPlyCIKA2rVr486dO5g2bRpmz54NmUyG3r17S/aJjIyEi4sL4uLiEBQUpCmfPHkyunTpAgCYN28eAgMDceXKFdSu/fjuFwDYsGEDatWqhcDAQADAgAEDEBkZiVatWknqde7cGW+88QYAYPbs2Vi5ciUaNWqEvn3Vb77Tpk1DWFgY7t69Czc3N3z22Wdo06YNZs2aBQDw8/NDXFwcPvnkEwwfPvyZrtXjzs/Ozg6CIMDNze2ZjqnNggULsGTJEvTq1QsA4OPjg7i4OKxatQrDhg3T1Bs/frymzgOOjo5YtmwZZDIZ/P398fHHHyM3NxfvvfceAGDGjBn48MMPceTIEQwYMOC5Y30R7KzVSUpmjvRNMjNHBSd7ubZdXko2lupPg+w86Ttadh5gb637k8LaUts+Imws1f9WWABymVCqTlYeUMuy5O/m9eRQidCMOXwSS3OgVQMTnLxY+bv3c7PTIKqUsLJ1kpRb2TgjJzOlzMe9dSUaZ4/8jJGztj5nhPQyUJirX2s5+dLy7DzA2kP7a9jasvRrMydffRyFhXrfp3ErRcSWI0qkZoqwthTQvK4MozqZ4Kttxcgz0JbEyv7FU5/KJUGMj49HWFgYBKHk5oyIiEB2djZu3bqFatWq4erVq5g1axaOHz+Oe/fuaVoOExISJAlivXr1NP92d3cHACQnJz9VghgZGYnBgwdr/h48eDCaN2+O9PR02Nvba30OV1dXAEDdunVLlSUnJ8PNzQ3x8fHo3r275LkiIiKwdOlSKJVKyOVPn2A8z/k9rZSUFNy8eROjRo3C6NGjNeXFxcWws7OT1A0NLT2eKTAwEDJZSauPq6ur5P+RXC6Hk5MTkpOTdcZQUFCAggLpO4ayuAByE/NnPp+yCKtngeHdbDV/f7Y+DYD2b3ov67c/AAiuKUOPiJKX+Q97/htn+sg5C0/RilDqMgmlr92jdR4+rIeTgPBAOZb/VvjkJwNgbgoMa2+K5DQR+05X/gSxhPRiihBLlT2tgvxsbFs9BZ2GLIDC2rEcYqOXxaOvPUHQ8hp9qgM9fdWHWy2T00XcTFHi3Z4mqF9DhmPxj+mXrsRe5vf/51UuCaIoipLk8EEZAE15t27d4OXlhW+//RYeHh5QqVQICgpCYaH0w8LUtGSk/IN9H+2G1iYuLg4nTpzAqVOnMG3aNE25UqnETz/9hDfffPOxz/G4533c+T28z6Nl2iZ9lPX8nsWD43377bdo0qSJ5LFHk1krq9Kjmh+OEVDHqa3scXEvXrwY8+bNk5TVaz4J9VuUvdv8WcRcKMDVW6mav03l6mttZy1DRnZJ3LZWMmRmG+Yb29OIT1DhZnLJa8zkv+tgrRCQ9VCLgpVF6RbCh2XnlbQ+PmBtISD7v1aM3HxAqRL/q1NyHHXLo/rf3m4yWFkCU/uXdOnLZQI6N5YjIlCOTzaVxGlmCgzvYIrCImD9viKD+JavsHaAIJMjJ/OepDw3KxVWts5lOmZ6yk1kpN7G5q9K3r9EUX2/fvhmAN6YvwsOVaqVPWgyOLkF6teataW03MoCyNHxGs7O015fqRKfawxhUTGQnCbCyfbJdcnwlEuCGBAQgF9++UWSSB09ehQ2Njbw9PREamoq4uPjsWrVKjRr1gyAerZxeYqMjETz5s3x1VdfScrXrVuHyMhISYL4rAICAkrFe/ToUfj5+WkSripVqiAxMVHz+OXLl5Gb+2zLoZiZmUGpfP6WEldXV3h6euLff//Fa6+99tzHK4sZM2Zg4sSJkrKxH6a9sOfPLxSRf196LdOzlAjyNUdCknpMq1wO+HubYdPerBcW14tWWATcl3xPEZGZK8LXQ4bEVPX1kcsAHzcZdp/SPdY3IVkFX08BR86XlPl6ypBwV52sKFXAnXsifD1lkqVvfD1kiEtQ/x1zRYmrd6TJ+PAOpoi9okT05ZJyc1NgREdTFCuBdXuLUGwgjYdyEzO4VQvEtfgj8G/QTlN+Lf4o/ILblOmYTm418Prs3yVlB39bisL8HM0EGDIuShWQmCqipoeACzdLEsIa7jJcvKn9y+6tFBF+VWUAHn5tCriTKj7Xly+5DHC2E3DjMcvrVHZsQdTtmRPEjIwMxMbGSsr+7//+D0uXLsU777yDt99+GxcvXsScOXMwceJEyGQyODg4wMnJCd988w3c3d2RkJCA6dOnl9c5oKioCOvWrcP8+fMlXaEA8Prrr+Pjjz/GmTNnEBwcXKbjT5o0CY0aNcKCBQvQv39/HDt2DMuXL5fMCm7dujWWL1+OV155BSqVCtOmTSvV6vYk3t7eyM7Oxr59+xAcHAyFQgGFQlGmmOfOnYtx48bB1tYWnTp1QkFBAaKiopCWllYqcasI5ubmMDeXdifLTfS7fuDuY7no2swKd1OLkZSqRLfmVigsEnH8bMlgnv/rZYe0TCU2/5kNQJ1EelZRv0xM5ICDjRzV3EyQXygi+b6BZC6POHpeiZbBcqRmikjNFNEyWI6iYiD235IPjz7NTZCZq55B/GCf0V1M0byeHPE3VKhTXQZfTwGrtpcklYfPKdG3hQlup8iQkCyiUW0Z7KwFnLygPkZeAZBXIH03VqnU4xTvZajLzf5LDk1NgE0HimBuBjy4i3LyK/+beeO2I/D7mqlwrx4EzxoNEHtoIzLvJ6JBc/VY3QO/LkFW+l10G/GxZp+7N+MBAIX5OcjNvo+7N+Mhl5vC2cMXJqbmqOLpJ3kOC4W6uebRcmMit1LAyrek5VThUxW2wbVReD8D+TcTH7Pny+FovAq9IuS4kyriZoqI0Foy2FkBp/5b17BtAxlsFAJ+PaJ+7Z26pEJjfxk6hMoQfVk9maWBrww/Hyp5D5PL1GshPvi3rQJwcwAKi4H7/32Hbh8iw8VbIjJyRFhZCGhRVwZzUyD2quH2whhC74S+PHOCeODAATRo0EBSNmzYMOzcuRNTpkxBcHAwHB0dMWrUKLz//vsAAJlMhg0bNmDcuHEICgqCv78/li1bhpYtW5bLSWzbtg2pqano2bNnqcdq1aqFunXrIjIyEsuWLSvT8Rs2bIhNmzZh9uzZWLBgAdzd3TF//nzJBJUlS5ZgxIgRaN68OTw8PPDFF18gOjr6mZ4nPDwcY8aMQf/+/ZGamvpcC12//vrrUCgU+OSTTzB16lRYWVmhbt26GD9+fJmO9zLYeTgHZqYChna1hcJChn9vF+GTH9KQX1jyDuFoJ5e8YTjYyLFgbEn3YOemVujc1Arx1wrx4Zr7LzL8cvP3WSVM5cCr4SawNFO3LqzZXYTCh1oa7a0FSTKWkCxi41/FaBciR9uGctzPErFhfzFupZRU+ueaCgqLYrRuYAIbhXrJmu/3FCE9++lj83QSUO2/Wc+T+0m/YHy8seCZjqUPAY06Iy8nDUd2rEB2RjKqePih39vfwM5JvWB/dkYKMu9LE5jVC3to/p2UcB5xJ7fDzskTYz/Y/yJDNyh2IUEI27dO83fAp+oJdDd/2IKzo2boK6wX5vx1EQpzFVrUk/+3KD2wfp8SGTnqx60tBcmaiOnZwI/7legYKkdjfxmycoE/TqkQn1Dy+rWxBN7sVtKoERGoHvpxLUmFtXvUiaStQkCfZjIozNVd3bdSRHz3R7HmeenlIoiPDpwjqiDDZifpOwSD5lndQd8hGCy/mi9mctTLqEo7f32HYNBORp7TdwgGa97QZ+uFK4tv/yyf44xuWz7HqUwM4+cJiIiIiMpZOc8RfakYzE/tderUCdbW1lq3Dz74QN/hVYhDhw7pPGdrawNfnZSIiIgqLYNpQfzuu++Ql6d9NU9Hx5dzfbDQ0NBSE4KIiIiofHCQnW4GkyB6enrqO4QXztLSEr6+vvoOg4iI6KXEBFE3g+liJiIiIqIXw2BaEImIiIjKE9dB1I0JIhERERml8lvpr2y/t16ZMUEkIiIio8QxiLpxDCIRERERSbAFkYiIiIwSF8rWjQkiERERGSV2MevGLmYiIiIikmALIhERERklLnOjGxNEIiIiMkrsYtaNXcxEREREJMEWRCIiIjJKYrn1MXOhbCIiIqKXAscg6sYuZiIiIiKSYAsiERERGSVOUtGNCSIREREZJRX7mHVigkhERERGiS2IunEMIhERERFJsAWRiIiIjBJbEHVjgkhERERGScUMUSd2MRMRERGRBFsQiYiIyCiJKn1HUHkxQSQiIiKjJLKLWSd2MRMRERGRBFsQiYiIyCip2MWsE1sQiYiIyCiJolguW1msWLECPj4+sLCwQEhICA4dOvTY+gcPHkRISAgsLCxQo0YNfP3112V63qfFBJGIiIjoBdq4cSPGjx+PmTNnIiYmBs2aNUOnTp2QkJCgtf61a9fQuXNnNGvWDDExMXjvvfcwbtw4/PLLLxUWIxNEIiIiMkoqsXy2Z/XZZ59h1KhReP3111GnTh0sXboUXl5eWLlypdb6X3/9NapVq4alS5eiTp06eP311zFy5Eh8+umnz3kFdOMYRHphfOs46zsEg1ZUyMEyZRVzJkvfIRgs+8hz+g7BoDUeFaTvEAzX0IsV/hRiWbI7LQoKClBQUCApMzc3h7m5eam6hYWFiI6OxvTp0yXl7du3x9GjR7Ue/9ixY2jfvr2krEOHDoiMjERRURFMTU2f8wxKYwsiERERGSVRLJ9t8eLFsLOzk2yLFy/W+pz37t2DUqmEq6urpNzV1RVJSUla90lKStJav7i4GPfu3Sufi/EItiASERERPYcZM2Zg4sSJkjJtrYcPEwRB8rcoiqXKnlRfW3l5YYJIRERERklVTl3M5uYWT0wIH3B2doZcLi/VWpicnFyqlfABNzc3rfVNTEzg5ORUtqCfgF3MREREZJT0scyNmZkZQkJCsHfvXkn53r17ER4ernWfsLCwUvX37NmD0NDQChl/CDBBJCIiInqhJk6ciO+++w6rV69GfHw8JkyYgISEBIwZMwaAust66NChmvpjxozBjRs3MHHiRMTHx2P16tWIjIzE5MmTKyxGdjETERGRURL1tDhE//79kZqaivnz5yMxMRFBQUHYuXMnqlevDgBITEyUrIno4+ODnTt3YsKECfjqq6/g4eGBZcuWoXfv3hUWoyDyl6rpBVnwU7G+QzBoXOam7DLSC55cibSyd7DQdwgGjcvclF2Xoopf5mbyytxyOc6nbyrK5TiVCbuYiYiIiEiCXcxERERklNiJqhsTRCIiIjJK5bXMzcuIXcxEREREJMEWRCIiIjJK7GHWjQkiERERGSWRXcw6MUEkIiIio6RiE6JOHINIRERERBJsQSQiIiKjxC5m3ZggEhERkVFigqgbu5iJiIiISIItiERERGSU2ICoGxNEIiIiMkrsYtaNXcxEREREJMEWRCIiIjJKItdB1IkJIhERERklFbuYdWIXMxERERFJsAWRiIiIjBK7mHVjgkhERERGibOYdWOCSEREREaJCaJuHINIRERERBJsQSQiIiKjpOIYRJ3YglgGgiBg69atAIDr169DEATExsZW+POuXbsW9vb2Ff48RERExkBUieWyvYxemhbEpKQkLFq0CDt27MDt27fh4uKC+vXrY/z48WjTpk2FPa+XlxcSExPh7OwMADhw4ABatWqFtLS0p07mhg8fjvT0dE3S+cCjx+rfvz86d+78VMdcu3Ytxo8fj/T09Gc4m5dHiK+AsDoy2FgCKRnA7tNK3EzRXb9aFaB9Qzmq2AFZecDReBVOXyl50deuKiAiQAZHG0AmA+5nAccvqPDPdcN/Y2jkL0PTQDmsFUBKuog/TipxI1n3eXm7CujYSI4q9gKycoHD55SIuqTSPF7FXkDr+nJ4OAlwsBbwx8liHItXSY7RyF+GRn4y2FsLANTPe+CsEpdvG+b17NjEDOFBprC0EHAjSYmf/ypA0n3VY/cJ9jVB51fM4Gwnw70MFXYcK8TZq8Va67YNNUO3CHMciCnEr38XaK3Tr7U5IuqaYcvBfByMLXruc3oRGvnLEBEg++/eA/44pUTCY+696q4COobKUcUeyMoFjpxXSe89O6B1fTncH9x7p5Q4/si91zJYhlbBcklZVp6ITzdrv/YvI8emoagxaRTsGgbBwsMFUb3H4u62ffoOiyqZlyJBvH79OiIiImBvb4+PP/4Y9erVQ1FREXbv3o233noLFy5cKLVPUVERTE1Nn/u55XI53Nzcnvs4T8PS0hKWlpYv5LkeUCqVEAQBMpnhNDYHVBPQoaEMO6NUuHVPRENfGQa1kGPlTiUyc0vXt7cCBraUI+aqiK3HVKjqLKBzqAy5+SpcuKX+sMorBA7HqZCaKUKpAmp5CHi1iQw5+Sr8m2SYSQ0ABHnL0KmRHNtPKJGQrEIjPzkGtzXB8t+KkJFTur69NTC4jQmiL6vw86FiVHORoWsTOXLzRcQlqK+DqRxIyxJx/roKnRrJSx8EQGaOiL2nlbifpd6nfk05BrYywcrtxUhJN6zr2SbEDK0amGH93nykpKvQvpEZxva0xKIfclCgI0/zdpNhWCcL7PwvKaxX0wTDO1ngi825uHFXmtBUc5UhPMgUt1OUOmOoW8ME1d3kSM9+fFJamQR6C+gYKsOOE0okpIgIrSXD4DZyfLWtWPe911qO6Msq/HJYhWpVBHRpIkdOvoj4B/eeiYC0bBHnb6jQMVT7vQcAd9NE/LC3JCF8SRuAdJJbKZB59iJufb8FIZuX6zscveIyN7oZzqf+Y4wdOxaCIODkyZPo06cP/Pz8EBgYiIkTJ+L48eMA1N3CX3/9Nbp37w4rKyssXLgQAPD7778jJCQEFhYWqFGjBubNm4fi4pI3jsuXL6N58+awsLBAQEAA9u7dK3nuh7uYr1+/jlatWgEAHBwcIAgChg8fXm7n+WgX85kzZ9CqVSvY2NjA1tYWISEhiIqKwoEDBzBixAhkZGRAEAQIgoC5c+cCANLS0jB06FA4ODhAoVCgU6dOuHz5cqnn2L59OwICAmBubo5Dhw7B1NQUSUlJkngmTZqE5s2bl9v5lZdX/GWI+VdE7L8i7mUCe06rkJkLhNbSfruH+MqQmaOudy8TiP1v37A6JfVvJIu4eEt9vLRs4OQlEXfTgWpVhBd0VhUjPECG01dUOH1ZhXsZ6haczBygkb/2D9dGfnJk5Kjr3csATl9WIeaKChGBJfXvpIrYE63EuesqFOvIVy7eEnH5tojUTCA1E9gXo0RhMeDlbHjXs0UDU+w5pU70ElNV+HFvPkxNBYT46/4C2qKBGS4mKPFnVCGS01T4M6oQl24q0aKBmaSemSkwpIMlNuzLR26B9g8yOysBfVqaY92ufCgNJz9EeB0ZYq6oW+rvZQC7olTqe89P++u0kZ8MGTnqevcygNNXxP/uvZL66ntPhXPXRZ33HqBOCLPzS7Zc7Y2yL62U3X/j0pylSNq698mVX3IqlVgu28vI4BPE+/fvY9euXXjrrbdgZWVV6vGHE6o5c+age/fu+OeffzBy5Ejs3r0bgwcPxrhx4xAXF4dVq1Zh7dq1WLRoEQBApVKhV69ekMvlOH78OL7++mtMmzZNZyxeXl745ZdfAAAXL15EYmIivvjii/I94Ye89tprqFq1Kk6dOoXo6GhMnz4dpqamCA8Px9KlS2Fra4vExEQkJiZi8uTJANTd2VFRUdi2bRuOHTsGURTRuXNnFBWVNHXk5uZi8eLF+O6773D+/HmEhoaiRo0aWLdunaZOcXExfvzxR4wYMaLCzq8sZDLA3RGlWvWuJomoqiP58HQWcFVLfXdHQKYjX/F2FeBkC9xIMdw3BrkMcHcScPWO9JP0yh2VzsTXy0XAFS31PZwFndfqSQRB3ZJpZgLcTDGgDAeAk60AOysZLiSUfKlUKoGrt4rh4667BcvHXY6LCdIuzQsJpffp29ICcdeLcemm9tZDAcDgDhbYf7rwiV3alcmDe+/KnUded4kqeOm496pWEXA18dF7T4SH07Pfe042wKQ+Jhjf0wR9msnhYP1s+xMZA4PvYr5y5QpEUUTt2rWfWHfQoEEYOXKk5u8hQ4Zg+vTpGDZsGACgRo0aWLBgAaZOnYo5c+bgzz//RHx8PK5fv46qVasCAD744AN06tRJ6/HlcjkcHR0BAC4uLs80oWT79u2wtpa+SymVuruUACAhIQFTpkzRnHutWrU0j9nZ2UEQBEn39+XLl7Ft2zYcOXIE4eHhAID169fDy8sLW7duRd++fQGou99XrFiB4OBgzb6jRo3CmjVrMGXKFADAjh07kJubi379+j31Ob4ICnNAJhOQky/94MnJF2Ftof1TxNoCWuvLZQIU5uoWBgAwNwXGd5dDLgdEEdgZpcI1A+5eVpgDcpmA7DxpeU6+CGtL7d8drS0E5ORLP6Sz89THUVig1LEex8VewOjOJjCRA4XFwE9/FSMl41nPQr9srNT3VFau9D7IyhXhYKv7+7eNQtC6j62i5B5t4GeCqi4yLNmgZVzEf9qEmkGlgsGMOXzgwb2Xky8tz84DrD10vE4tBWTnPfo6ffZ771aKiC1HlEjNFGFtKaB5XRlGdTLBV9uKkWdkLYnEdRAfx+ATxAfjBwThyV8hQ0NDJX9HR0fj1KlTmhZDQJ2U5efnIzc3F/Hx8ahWrZomOQSAsLCwcopcqlWrVli5cqWk7MSJExg8eLDOfSZOnIjXX38d69atQ9u2bdG3b1/UrFlTZ/34+HiYmJigSZMmmjInJyf4+/sjPj5eU2ZmZoZ69epJ9h0+fDjef/99HD9+HK+88gpWr16Nfv36aW21BYCCggIUFEjfbYuL5DAxNdcZX3l6dFiJAKAsbwMP71NQBHyzSwkzE8DHTUD7BjKkZ6seO6HDUD3ujLRd2yfupEVqpoiVvxfBwkxAQHUZejU1wepdRZU6SQzxN0H/1haav1dt+y8refTcn+KG0zb06UGRvbWA3i3MseLXPBTr+J5Y1UWGFvVN8clPuhPIyq7UvSSU7XX6LDs93GqZnC7iZooS7/Y0Qf0aslKTqejlxzGIuhl8glirVi0IgoD4+Hj06NHjsXUfTWZUKhXmzZuHXr16laprYWGh9cZ5mkS0LKysrODr6yspu3Xr1mP3mTt3LgYNGoQdO3bgjz/+wJw5c7Bhwwb07NlTa31dLwRRFCXnZWlpWeo8XVxc0K1bN6xZswY1atTAzp07ceDAAZ2xLV68GPPmzZOUtew1C637zH7sOT2v3AL1mBJrS+kntMKidGvFA9n5gJWFtL6VhQClSizVopCWrf7v3XQRzrYiIgIEg00QcwsApUqE9SPznqwsBOTkaT+n7PwH1/ah+pbq4zzrOC6lSj0bHBBxJ1UJTycBr9SR4/fjj28516dz/xbjRlLJDAoTufpa2FgJyHyoRdDGsnQL4cOyckXYWkmv48Otil4uctgoZJg8UKF5XC4TUNNTRLNgU0xano2aHnJYKwTMHWklqdOjmTlaNDDD/DVaZnpUErrvPei+9/K01y/LvfewomIgOU2Ek23Zj0H0MjL4BNHR0REdOnTAV199hXHjxpVKAtPT03V29TZs2BAXL14slZg9EBAQgISEBNy5cwceHh4AgGPHjj02HjMz9SDzJ3UPlxc/Pz/4+flhwoQJGDhwINasWYOePXvCzMysVAwBAQEoLi7GiRMnNF3MqampuHTpEurUqfPE53r99dcxYMAAVK1aFTVr1kRERITOujNmzMDEiRMlZUu26h6TVV5UKiDxPlDDTcDFWyUfNDXcBFzSsYTK7XsianlKP6xruAlIvP/k2Y3ysg68qwSUKiAxVURNdxniE0rulZoeMly4qb0l5WayCH8vGQBp/Tv3xOeeCSoIgEnF3yLPpaAIKMh4+ERFZOSo4F/NBLdTCgGox9fVrGqC3w/rzlquJSrhX80EB2JKuob9q5ngWqL6ul66WYwPf5QmeIPaWeDufRX2RRdCFIFTF4pKjU0c08MSUReKcOJ85e5y1tx7HgIu3Hzodeouw0Ud996tFBF+VWUASh739RBwJ/X57j25DHC2M9wvevR8RBVbjXUx+EkqALBixQoolUo0btwYv/zyCy5fvoz4+HgsW7bssV3Cs2fPxg8//IC5c+fi/PnziI+Px8aNG/H+++8DANq2bQt/f38MHToUZ86cwaFDhzBz5szHxlK9enUIgoDt27cjJSUF2dnZ5XquD+Tl5eHtt9/GgQMHcOPGDRw5cgSnTp3SJHre3t7Izs7Gvn37cO/ePeTm5qJWrVro3r07Ro8ejcOHD+PMmTMYPHgwPD090b179yc+Z4cOHWBnZ4eFCxc+cXKKubk5bG1tJduL6l4+flGFBjUEBNcQ4GwLtGsgg50CiL6sfiNoHSxD91dKbv3oKyrYWanrOdsCwTUENKghSLqbIgIE+LgJsLdSD3Bv4i+gno+Af64b9pvL0TgVGtaSoYGvDM52QMdGcthZAacuqhOPtg3l6NW0JGs7dUkJeyugY6gcznZAA18ZGvrKcOR8SaIilwFuDgLcHATIZeqWMTcHAY42Jc/btoEc1V3U19PFXkCbBnJ4uwo4+6/hXc+DMUVo18gM9WqawN1JhtfaW6CoSET0xZIk7bX2FugaXjJD+WBsIfyrydEmxAwuDjK0CTGDv5ccB2PUSWZBEZCYqpJsBUUicvJFJKaqr1Fufuk6SpV6CaFkA1gq6Gi8Cg19ZWjgK6jvvVCZ+t77b13Dtg1k6Bnx8L2ngr0V0CFU9t+9J6CBrwxHzpfcM+p7T73JZYCtQv3vh++99iEyVHcVYG+tnqDWv4Uc5qZA7FXDu/fKSm6lgG1wbdgGq8evK3yqwja4Niy83PUc2YvHWcy6GXwLIgD4+Pjg9OnTWLRoESZNmoTExERUqVIFISEhpcb1PaxDhw7Yvn075s+fj48//himpqaoXbs2Xn/9dQCATCbDr7/+ilGjRqFx48bw9vbGsmXL0LFjR53H9PT0xLx58zB9+nSMGDECQ4cOxdq1a8v7lCGXy5GamoqhQ4fi7t27cHZ2Rq9evTTduuHh4RgzZgz69++P1NRUzJkzB3PnzsWaNWvw7rvvomvXrigsLETz5s2xc+fOp1oTUiaTYfjw4fjggw8wdOjQcj+n8hKXIMLSTIXmgTJY/7dQ9k8Hlcj4b6iWtQUkkwHSc4CfDijRvqEcobXkyMoDdp0uWQMRAEzlAjqFCrC1BIqVwL1MYOsxlWbtP0N17roKluZAy2A5bCzlSE4X8eO+knXobCzVy6g8kJ4N/LivGB0bydG4timycoGdJ5WS62BjCYx9teR+ahokR9MgOa4lqbBmt3rmrpUl0KuZCWwsgfxC9bp06/4sxtVEw7ue+6ILYWoC9GllDoW5eqHslVvzJGsgOtgIEMWSLyXXE1X4/o98dAkzQ+cwM9zLUGHtH/ml1kB8mZ2/LkJhrkKLenLYWALJ6cD6fUrNvWdtKcDuoQ6h9Gzgx/1KdAyVo7G/DFm5wB+nVJo1EAH1vfdmt5J7LyJQjohA9b23do/6S4ytQkCfZjIozNVd3bdSRHz3h/a1F19WdiFBCNtXsipFwKfvAQBu/rAFZ0fN0FdYesExiLoJIq8OPYPRo0fj7t272LZt2zPvu+An4/mlgopQVGg8yUN5y0jn9NSysneweHIl0qnxqCB9h2CwuhRdrPDn6DfperkcZ9MS73I5TmXyUrQgUsXLyMjAqVOnsH79evz222/6DoeIiOi5cZkb3ZggVrCEhAQEBATofDwuLg7VqlV7gRGVTffu3XHy5Em88cYbaNeunb7DISIiem5MEHVjgljBPDw8EBsb+9jHDcHjlrQhIiKilwsTxApmYmKicxkdIiIi0h+VyLHdujBBJCIiIqPELmbdXop1EImIiIio/LAFkYiIiIwSWxB1Y4JIRERERolLQevGLmYiIiIikmALIhERERkllYqzmHVhgkhERERGiWMQdWOCSEREREZJ5DqIOnEMIhERERFJsAWRiIiIjBK7mHVjgkhERERGiQmibuxiJiIiIqqk0tLSMGTIENjZ2cHOzg5DhgxBenq6zvpFRUWYNm0a6tatCysrK3h4eGDo0KG4c+fOMz0vE0QiIiIySipRVS5bRRo0aBBiY2Oxa9cu7Nq1C7GxsRgyZIjO+rm5uTh9+jRmzZqF06dPY8uWLbh06RJeffXVZ3pedjETERGRUarsXczx8fHYtWsXjh8/jiZNmgAAvv32W4SFheHixYvw9/cvtY+dnR327t0rKfvyyy/RuHFjJCQkoFq1ak/13EwQiYiIiJ5DQUEBCgoKJGXm5uYwNzd/ruMeO3YMdnZ2muQQAF555RXY2dnh6NGjWhNEbTIyMiAIAuzt7Z/6udnFTEREREZJVKnKZVu8eLFmjOCDbfHixc8dX1JSElxcXEqVu7i4ICkp6amOkZ+fj+nTp2PQoEGwtbV96udmgkhERERGSVSJ5bLNmDEDGRkZkm3GjBk6n3fu3LkQBOGxW1RUFABAEITScYui1vJHFRUVYcCAAVCpVFixYsUzXRt2MRMRERE9h2ftTn777bcxYMCAx9bx9vbG2bNncffu3VKPpaSkwNXV9bH7FxUVoV+/frh27Rr279//TK2HABNEIiIiMlL6+qk9Z2dnODs7P7FeWFgYMjIycPLkSTRu3BgAcOLECWRkZCA8PFznfg+Sw8uXL+Ovv/6Ck5PTM8fILmYiIiIySiqVWC5bRalTpw46duyI0aNH4/jx4zh+/DhGjx6Nrl27Siao1K5dG7/++isAoLi4GH369EFUVBTWr18PpVKJpKQkJCUlobCw8Kmfmy2IREREZJRElX5aEJ/F+vXrMW7cOLRv3x4A8Oqrr2L58uWSOhcvXkRGRgYA4NatW9i2bRsAoH79+pJ6f/31F1q2bPlUz8sEkYiIiKiScnR0xI8//vjYOqJY0orp7e0t+busmCASERGRUarsC2XrExNEIiIiMkr6mqRiCDhJhYiIiIgk2IJIRERERoldzLoxQSQiIiKjZAizmPWFXcxEREREJCGI5TEXmsjAFRQUYPHixZgxY8Yz/VwS8do9L16/suO1KzteO3oSJohEADIzM2FnZ4eMjIxn/r1KY8dr93x4/cqO167seO3oSdjFTEREREQSTBCJiIiISIIJIhERERFJMEEkAmBubo45c+ZwsHYZ8No9H16/suO1KzteO3oSTlIhIiIiIgm2IBIRERGRBBNEIiIiIpJggkhEREREEkwQiYiIiEiCCSIRERERSTBBJKN19epVvP/++xg4cCCSk5MBALt27cL58+f1HJlhyc/P13cIRPQUWrZsiR9++AF5eXn6DoUMABNEMkoHDx5E3bp1ceLECWzZsgXZ2dkAgLNnz2LOnDl6jq7yU6lUWLBgATw9PWFtbY1///0XADBr1ixERkbqObrKb/78+cjNzS1VnpeXh/nz5+shIsNy+/ZtbNq0CcuXL8eyZcskG+kWEhKCqVOnws3NDaNHj8bx48f1HRJVYlwHkYxSWFgY+vbti4kTJ8LGxgZnzpxBjRo1cOrUKfTo0QO3b9/Wd4iV2vz58/H9999j/vz5GD16NM6dO4caNWpg06ZN+Pzzz3Hs2DF9h1ipyeVyJCYmwsXFRVKempoKFxcXKJVKPUVW+a1ZswZjxoyBmZkZnJycIAiC5jFBEDRfVkg7pVKJ7du3Y82aNdi5cyd8fX0xcuRIDBkyBK6urvoOjyoRtiCSUfrnn3/Qs2fPUuVVqlRBamqqHiIyLD/88AO++eYbvPbaa5DL5ZryevXq4cKFC3qMzDCIoihJbB44c+YMHB0d9RCR4Zg9ezZmz56NjIwMXL9+HdeuXdNsTA6fTC6Xo3v37ti6dStu376NQYMGYdasWfDy8kKPHj2wf/9+fYdIlYSJvgMg0gd7e3skJibCx8dHUh4TEwNPT089RWU4bt++DV9f31LlKpUKRUVFeojIMDg4OEAQBAiCAD8/P0mSqFQqkZ2djTFjxugxwsovNzcXAwYMgEzG9o3ncfLkSaxZswY//fQTXFxcMHz4cCQmJqJbt25488038emnn+o7RNIzJohklAYNGoRp06Zh8+bNEAQBKpUKR44cweTJkzF06FB9h1fpBQYG4tChQ6hevbqkfPPmzWjQoIGeoqr8li5dClEUMXLkSMybNw92dnaax8zMzODt7Y2wsDA9Rlj5jRo1Cps3b8b06dP1HYrBSU5Oxrp167BmzRpcvnwZ3bp1w4YNG9ChQwfNl5V+/fqhR48eTBCJYxDJOBUVFWH48OHYsGEDRFGEiYkJlEolBg0ahLVr10q6Tam033//HUOGDMGMGTMwf/58zJs3DxcvXsQPP/yA7du3o127dvoOsVI7ePAgwsPDYWpqqu9QDI5SqUTXrl2Rl5eHunXrlrqGn332mZ4iq/zMzMxQs2ZNjBw5EsOHD0eVKlVK1cnMzET37t3x119/6SFCqkyYIJJRu3r1KmJiYqBSqdCgQQPUqlVL3yEZjN27d+ODDz5AdHQ0VCoVGjZsiNmzZ6N9+/b6Ds0gqFQqXLlyBcnJyVCpVJLHmjdvrqeoKr8FCxZgzpw58Pf3h6ura6lJKhxDp50oijh06BBCQ0OhUCj0HQ4ZACaIREQv2PHjxzFo0CDcuHEDj74FC4LAWcyP4eDggM8//xzDhw/XdygGRaVSwcLCAufPn+cXYXoqHINIRkkURfz888/466+/tLbgbNmyRU+RGZ7s7OxS18/W1lZP0RiGMWPGIDQ0FDt27IC7u7vWGc2knbm5OSIiIvQdhsGRyWSoVasWUlNTmSDSU+E0MDJK7777LoYMGYJr167B2toadnZ2ko0e79q1a+jSpQusrKxgZ2cHBwcHODg4wN7eHg4ODvoOr9K7fPkyPvjgA9SpUwf29va8/57Bu+++iy+//FLfYRikjz/+GFOmTMG5c+f0HQoZAHYxk1FydHTEjz/+iM6dO+s7FIMUHh4OQP1h/eg4MABo0aKFPsIyGK1bt8bUqVPRsWNHfYdicHr27In9+/fDyckJgYGBpSapsPVfNwcHB+Tm5qK4uBhmZmawtLSUPH7//n09RUaVEbuYySjZ2dmhRo0a+g7DYJ09exbR0dHw9/fXdygG6Z133sGkSZOQlJSkdSZuvXr19BRZ5Wdvb49evXrpOwyDtHTpUn2HQAaELYhklL7//nvs2rULq1evLvUtmp6sVatWmDlzJtq2bavvUAyStkWeBUHQ/MIKJ6loV1xcjPXr16NDhw5wc3PTdzhELzUmiGSUcnNz0atXLxw5cgTe3t6lWnBOnz6tp8gMw9WrVzFmzBgMHjwYQUFBbAF7Rjdu3Hjs448uQE4lFAoF4uPjeY3KSKlUYuvWrYiPj4cgCAgICMCrr77KtV+pFHYxk1EaPnw4oqOjMXjwYK1j6OjxUlJScPXqVYwYMUJTxhawp8fkpuyaNGmCmJgYXsMyuHLlCjp37ozbt2/D398foiji0qVL8PLywo4dO1CzZk19h0iVCFsQyShZWVlh9+7daNq0qb5DMUgBAQGoU6cOpk6dqjXB5of34/3www+PfZw/96jbg5/ZmzBhAkJCQmBlZSV5nK3XunXu3BmiKGL9+vVwdHQEAKSmpmLw4MGQyWTYsWOHniOkyoQJIhml2rVrY9OmTfwwKSMrKyucOXMGvr6++g7FID26FFBRURFyc3NhZmYGhULB2aSPwfGbZWdlZYXjx4+jbt26kvIzZ84gIiIC2dnZeoqMKiN2MZNRWrJkCaZOnYqvv/4a3t7e+g7H4LRu3ZoJ4nNIS0srVXb58mW8+eabmDJlih4iMhzXrl3TdwgGy9zcHFlZWaXKs7OzYWZmpoeIqDJjCyIZpYfXA1MoFKUmWbAF5/G++eYbLFy4ECNHjtS6TMurr76qp8gMW1RUFAYPHowLFy7oOxR6CQ0dOhSnT59GZGQkGjduDAA4ceIERo8ejZCQEKxdu1a/AVKlwgSRjNL333//2MeHDRv2giIxTNq6+R5gN1/ZxcTEoEWLFsjMzNR3KJXaunXr8PXXX+PatWs4duwYqlevjqVLl8LHxwfdu3fXd3iVVnp6OoYNG4bff/9d86WuuLgYr776KtasWQN7e3v9BkiVChNEIqIXbNu2bZK/RVFEYmIili9fDi8vL/zxxx96iqzyW7lyJWbPno3x48dj0aJFOHfuHGrUqIG1a9fi+++/x19//aXvECu9K1euID4+HqIoIiAggENFSCsmiGS0uB4Y6cujLbCCIKBKlSpo3bo1lixZAnd3dz1FVvkFBATggw8+QI8ePWBjY4MzZ86gRo0aOHfuHFq2bIl79+7pO8RKa/78+Zg8eTIUCoWkPC8vD5988glmz56tp8ioMmKCSEaJ64E9v4MHD+LTTz/VJNh16tTBlClT0KxZM32HRi8xS0tLXLhwAdWrV5ckiJcvX0a9evWQl5en7xArLblcjsTERLi4uEjKU1NT4eLiwqEhJKF7IBHRS2zcuHGoWbMmbt68idOnTyMmJgYJCQnw8fHBuHHj9B1epffjjz+ibdu2UCgUGDduHN5++21YWlqiTZs2+N///qfv8AyKKIrg9/Sn5+Pjg9jY2FLlf/zxBwICAl58QAbkwVJAjzpz5oxmXUQiDZHICCkUCvHs2bOlymNjY0UrKys9RGRYateuLX722WelypcsWSLWrl1bDxEZnu+//14MCgoSzc3NRXNzc7Fu3briDz/8oO+wKq158+aJOTk54urVq0VPT09xw4YNopWVlfjTTz+JCxcu1PybSrO3txcdHBxEmUym+feDzdbWVpTJZOLYsWP1HSZVMuxiJqPk6OiI7du3Izw8XFJ+5MgRdOvWjcvcPIG5uTnOnz9fanD7lStXEBQUhPz8fD1FZhg+++wzzJo1C2+//TYiIiIgiiKOHDmCr776CgsXLsSECRP0HWKl83D36LfffouFCxfi5s2bAABPT0/MnTsXo0aN0nOUldP3338PURQxcuRILF26FHZ2dprHzMzM4O3tjbCwMD1GSJURE0QySlwP7Pn4+vpiypQpeOONNyTlq1atwqefforLly/rKTLD4OPjg3nz5pX6Sb3vv/8ec+fO5WLQWshkMiQlJUnGz927dw8qlarUmDrS7uDBg4iIiICJCX8jg56MdwkZpWXLlmHYsGEICwsrtR7YF198oefoKr9JkyZh3LhxiI2NRXh4OARBwOHDh7F27Vpev6eQmJhYqvUaAMLDw5GYmKiHiAzDo+PnnJ2d9RSJYbKxsUF8fLzmp/Z+++03rFmzBgEBAZg7dy5/TYUk2IJIRo3rgZXdr7/+iiVLliA+Ph4ANLOYuVDxkwUFBWHQoEF47733JOULFy7Exo0b8c8//+gpsspLJpMhKCjoia1fp0+ffkERGZ5GjRph+vTp6N27N/79918EBASgV69eOHXqFLp06YKlS5fqO0SqRJggEhG9YL/88gv69++Ptm3bIiIiQtMCu2/fPmzatAk9e/bUd4iVjkwmw6RJk2Btbf3YenPmzHlBERkeOzs7nD59GjVr1sRHH32E/fv3Y/fu3Thy5AgGDBigGdNJBLCLmYxUnz59EBoaiunTp0vKP/nkE5w8eRKbN2/WU2SG4dSpU1CpVGjSpImk/MSJE5DL5QgNDdVTZIahd+/eOHHiBD7//HNs3bpV04J98uRJNGjQQN/hVVpTpkzheMPnIIoiVCoVAODPP/9E165dAQBeXl5cYJxKYQsiGaUqVapg//79mrE4D/zzzz9o27Yt7t69q6fIDEPjxo0xdepU9OnTR1K+ZcsWfPTRRzhx4oSeIqOXla5FnunptW7dGl5eXmjbti1GjRqFuLg4+Pr64uDBgxg2bBiuX7+u7xCpEmELIhml7OxsrQOyTU1NkZmZqYeIDEtcXBwaNmxYqrxBgwaIi4vTQ0SGKTk5GcnJyZpWnQfq1aunp4gqL7ZlPL+lS5fitddew9atWzFz5kzNmOuff/5Z66QpMm5MEOn/27v3oCjLPQ7g3wXE64J4VBKOrFCCIqKi5EEiJhVtkFRorDQv6dGOOooWXg5HQSE108JMaEgF02q8lJp2pNRAMSA1QBY1LiIGooAXBI4KCeyePxw210Vcbzy7+34/M8zA875/fIdh2d8+7/P8Hklyc3PDzp07dc4e3bFjB09j0EPr1q1RXl4OJycnrfHS0lK20NBDRkYGpkyZotkgdS+ZTMYjz5pw4cIFdOnSRe/7rayskJWVpfM3KmXu7u5NboBau3Ytz6AnHfxPTpIUFhaG119/HefPn8fQoUMBAImJidi+fTvXH+rBz88PoaGh2Ldvn6bpbmVlJf7zn//Az89PcDrDN3XqVDg7OyMuLg62trZNHn9G2hQKxSPdzxlH/bVp00Z0BDJAXINIknXgwAGsWrUKWVlZaNu2Ldzd3bFs2TL4+vqKjmbwLl26hJdffhnXr1/XbKrIysqCra0tDh8+jO7duwtOaNjkcjlOnTrFtkrPkFwuh1KplPwMYqdOnZCfn4/OnTvDxsam2Q8jPEGK7sUZRJKsUaNGYdSoUaJjGCV7e3tkZ2fjm2++gVKpRNu2bTF16lSMHz9e03icHmzYsGFQKpUsEOmZW7duHeRyOQCwzyE9Es4gkqTduXOnyU0CDg4OghKRFFy7dg1TpkzBiy++CDc3N52ievTo0YKSmQ7OIBI9Gc4gkiSdO3cO06ZNQ1pamta4Wq3mJgE95efn4+jRo00W2Pdv/iFtaWlpSElJwY8//qhzjX9/TwfXdf5F384MVlZWzzgJGRPOIJIkNR5Y/+9//xvdunXTeTPp16+foGTGYdOmTZg1axY6d+6M5557Tuv3J5PJeNzZQ/To0QMBAQEICwuDra2t6DgmiTOIfzEzM2u2YOYHY2oKC0SSpPbt2yMjIwO9evUSHcUoKRQKzJ49G4sXLxYdxSjJ5XJkZWXh+eefFx3F6ERGRmLBggVo166d1nhNTQ3Wrl2rmb1OSUmBp6cnWrduLSKmQUlOTtZ8r1ar4e/vj82bN8Pe3l7rPm7Qo3uxQCRJ8vT0xLp16/DSSy+JjmKU2GPuyUyZMgU+Pj6YPn266ChG50Enqly/fh1du3blLJgeOLtK+uAaRJKkjz76CIsWLcKqVavQt29fnU0CXIvTvHHjxuHQoUOYOXOm6ChGydnZGaGhoUhJSWny7y84OFhQMsPX+Dj0fkqlEp06dRKQiMg0cQaRJMnMzAyA7kJ2rsXRz4cffoioqCiMGjWKBc5jcHR0fOA1mUyGwsLCFkxjHBp7+FVVVcHKykrrtdvQ0ICbN29i5syZiImJEZjSOHAGkfTBApEk6d41OU3hWpzmscChlrZ161ao1WpMmzYNn376qeYEHwCwtLREjx494OXlJTCh8ZDL5cjOzm72dUzEApGIyECcPn0acXFxbGjcjOTkZAwZMoQN2R9BUFCQ1s8//PADhg4divbt22uN79mzpyVjkYHjGkSSlOzsbL3uc3d3f8ZJiO6qrq7G9u3bERcXh/T0dP7tPYSvry9UKhXy8/Ob7MH58ssvC0pmuO6dbQWAiRMnCkpCxoQziCQpjf3Amvuz5xrEB3v//ff1ui8qKuoZJzF+ycnJiIuLw+7du1FbW4uFCxdi+vTpPH7vIY4fP44JEyagqKhI53XM1+7TUVJSAjs7O81abZImziCSpFy4cEF0BKN26tQp0RGMWmlpKbZs2YL4+HjcunUL48ePR3JyMry8vDB58mQWh3qYOXMmBg0ahAMHDjTZ5J6enKurK9tYEQtEkhaFQgEAKC4uRvfu3Zt8cykuLm7pWEbjyJEjoiMYNUdHR4wbNw4xMTHw8/PjDM1jOHfuHL777jsW088QHywSAPC/E0mSo6Mjrl69qjN+/fp17uzTQ2RkJG7fvq0zXlNTg8jISAGJjINCoUBKSgqOHTuG/Px80XGM0uDBg1FQUCA6BpHJY4FIkvSgZrs3b95EmzZtBCQyLhEREbh586bO+O3btxERESEgkXHIy8vD119/jdLSUnh6emLgwIFYt24dAN2enNS0uXPnIiQkBF9++SUyMjKQnZ2t9UVETwc3qZCkNG6yWL9+PWbMmKF1nmtDQwNOnDgBc3NzpKamiopoFMzMzFBeXo4uXbpojSclJeHNN99scnaWtN28eRPbt29HfHw8Tpw4AV9fX0yYMAFjx47V+b3SX5p6LN+48YybVJ4ONtImgGsQSWIaN1mo1WqcPn0alpaWmmuWlpbo168fFixYICqewWs8zUImk8HZ2fmBp1nQw3Xo0AEzZszAjBkzkJOTg82bN2Pp0qWYPXs26urqRMczWNxo9uxxNpsAziCSRE2dOhXr16/nmcuPiKdZPFv19fXYv3+/TmNjopbEGUQCWCAS0WPgaRZPTqVSoaCggM2eH9G2bduavT558uQWSmJ8pk2bhvXr10Mul2uN37p1C3PnzkV8fDwA4OLFi7Czs4O5ubmImGQgWCCSJN26dQurV69GYmJik2/QPEv44VjgPD42e358NjY2Wj/X1dXh9u3bsLS0RLt27VBRUSEomeEzNzdHaWkpunbtqjV+7do1PPfcc6ivrxeUjAwR1yCSJE2fPh3JycmYNGkSm+0+BhY4T4bNnh/fjRs3dMbOnTuHWbNmYeHChQISGb7q6mqo1Wqo1Wr873//0+rU0NDQgISEBJ2ikYgziCRJHTt2xIEDB+Dt7S06ilHq378/nJ2dERER0WSBc//Zr6Stffv2UCqVbPb8FKWnp2PixInIzc0VHcXgNB4x+iAymQwRERFYsmRJC6YiQ8cZRJIkGxsbdOrUSXQMo8XTLJ5MY7Nn/v6eHnNzc1y+fFl0DIN05MgRqNVqDB06FLt379b632dpaQmFQgE7OzuBCckQsUAkSfrggw8QHh6OrVu3avVCJP2wwHkyjc2ey8rK0LdvX53NPu7u7oKSGb79+/dr/axWq1FaWoro6Gg+EXgAX19fAHdbBDk4OHBJA+mFj5hJkgYMGIDz589DrVajR48eOm/QmZmZgpIZh71792Lp0qVYuHAhC5zHwGbPj+/+351MJkOXLl0wdOhQfPLJJ+jWrZugZIYpOzsbbm5uMDMze+hJM3zd0r1YIJIkPew4uGXLlrVQEuPEAufJFBUVNXtdoVC0UBIydWZmZigrK0PXrl01axGbetvn65buxwKRiB4ZCxwyBI1vX3xk+mBFRUWax8p83dKjYIFIRCTI77//juLiYty5c0drfPTo0YISGYdt27Zh7dq1OHfuHADA2dkZCxcuxKRJkwQnIzId3KRCktTQ0IB169Zh165dTb5Bs9mufljgPJ7CwkIEBgbi9OnTWo/8GmfC+KjvwaKiohAWFoY5c+bA29sbarUaqampmDlzJq5du4b33ntPdESDcv+mnubwdUv34gwiSVJ4eDg2b96M999/H2FhYViyZAn++OMPfP/99wgPD0dwcLDoiAaNBc6Tee2112Bubo5NmzbByckJJ0+exPXr1xESEoKPP/4YPj4+oiMaLEdHR0REROgcqbd161YsX74cFy5cEJTMMDW1qefet/17H8/zdUv30l1pTiQB33zzDTZt2oQFCxbAwsIC48ePx+bNmxEeHo7jx4+Ljmfw5s2bB0dHR5SXl6Ndu3Y4e/Ysjh07hkGDBuHo0aOi4xm8X3/9FZGRkejSpQvMzMxgZmaGl156CR9++CE/nDxEaWkphgwZojM+ZMgQlJaWCkhk2FQqlebr0KFD6N+/P3788UdUVlaiqqoKCQkJ8PDwwE8//SQ6KhkYFogkSY395wCgQ4cOqKqqAgAEBATgwIEDIqMZBRY4T6ahoQEdOnQAAHTu3FnT4FmhUCAvL09kNIP3wgsvYNeuXTrjO3fuRM+ePQUkMh7z58/H+vXrMXLkSFhZWUEul2PkyJGIiori65Z0cA0iSdLf//53lJaWwsHBAS+88AIOHToEDw8P/Pbbb2jdurXoeAavqQLHxcWFBY6e3NzckJ2dDScnJwwePBhr1qyBpaUlNm7cCCcnJ9HxDFpERATefPNNHDt2DN7e3pDJZEhJSUFiYmKThSP95fz5800eg2ltbY0//vij5QORQeMMIklSYGAgEhMTAdx9XBoWFoaePXti8uTJmDZtmuB0hq+xwAGgKXBSU1MRGRnJAkcPS5cuhUqlAgCsWLECRUVF8PHxQUJCAj777DPB6Qzb66+/jhMnTqBz5874/vvvsWfPHnTu3BknT55EYGCg6HgGzdPTE/Pnz9d6FF9WVoaQkBC8+OKLApORIeImFSIAJ06cQGpqKl544QXu5NPDwYMHcevWLQQFBaGwsBABAQHIzc3F3/72N+zcuRNDhw4VHdHoVFRUwMbGhj396JkpKChAYGAg8vLy4ODgAAAoLi6Gs7Mzvv/+ex6dSVpYIBLRU8EC5/GUlJRAJpPB3t5edBSjcuXKFVy5ckUzE9uIx8U1T61W4/Dhw8jNzYVarYarqyuGDx/O1y3pYIFIkvThhx/C1tZW53FyfHw8rl69isWLFwtKZhyqqqrQ0NCATp06aY1XVFTAwsICVlZWgpIZB5VKhRUrVuCTTz7BzZs3AQByuRwhISFYsmRJk0cZ0l0ZGRmYMmUKcnJydI6M43Fx+qutrUXr1q1ZGNID8b8QSdIXX3yBXr166Yz36dMHsbGxAhIZl7feegs7duzQGd+1axfeeustAYmMy5IlSxAdHY3Vq1fj1KlTyMzMxKpVq7BhwwaEhYWJjmfQpk6dCmdnZ6SlpaGwsBAXLlzQfBUWFoqOZ9BUKhU++OAD2Nvbo0OHDpqekWFhYYiLixOcjgwNZxBJktq0aYOcnBw4OjpqjRcWFsLV1RW1tbWCkhmHTp06ITU1Fb1799Yaz83Nhbe3N65fvy4omXGws7NDbGysznrXffv2Yfbs2bh06ZKgZIZPLpfj1KlTXC/3GCIjI7F161ZERkZixowZOHPmDJycnLBr1y6sW7cOv/76q+iIZEA4g0iS1L17d6SmpuqMp6amws7OTkAi4/Lnn3+ivr5eZ7yurg41NTUCEhmXioqKJmewe/XqxWMeH2LYsGFQKpWiYxilbdu2YePGjXj77bdhbm6uGXd3d0dubq7AZGSI2AeRJGn69OmYP38+6urqNDtuExMTsWjRIoSEhAhOZ/g8PT2xceNGbNiwQWs8NjYWAwcOFJTKePTr1w/R0dE6LW2io6O5yeIhNm/ejClTpuDMmTNwc3NDq1attK6zC8GDXbp0qcmZV5VKhbq6OgGJyJCxQCRJWrRoESoqKjB79mzcuXMHwN3HzosXL0ZoaKjgdIZv5cqVGD58OJRKJYYNGwbgboH922+/4dChQ4LTGb41a9Zg1KhR+Pnnn+Hl5QWZTIa0tDRcvHgRCQkJouMZtLS0NKSkpODHH3/UucZNKs3r06cPfvnlFygUCq3xb7/9FgMGDBCUigwV1yCSpN28eRM5OTlo27YtevbsyVNUHkFWVhbWrl2LrKwstG3bFu7u7ggNDeVxZ3q6fPkyYmJitNqNvPvuu1i+fDni4+NFxzNYPXr0QEBAAMLCwmBrays6jlH54YcfMGnSJISGhiIyMhIRERHIy8vDtm3b8N///hd+fn6iI5IBYYFIRGQglEolPDw8OAvWDLlcjqysLDz//POioxilgwcPYtWqVcjIyIBKpYKHhwfCw8MxYsQI0dHIwPARM0lGUFAQvvzyS1hZWSEoKKjZe/fs2dNCqYxHdXW1pr9hdXV1s/eyDyI9K0FBQThy5AgLxEdUX1+PlStXYtq0aUhOThYdh4wAC0SSDGtra01T2KYOrKfm2djYoLS0FF27dkXHjh2bbLCrVqu5DoyeKWdnZ4SGhiIlJQV9+/bV2aQSHBwsKJlhs7CwwNq1azFlyhTRUchI8BEzEeklOTkZ3t7esLCweOgMhK+vbwulMi18xPxw9/cuvZdMJmOz7GaMHTsWY8eOxTvvvCM6ChkBFohERC3kYUsbKisrkZyczAKRnokvvvgCy5cvx9tvv42BAweiffv2WtfZIojuxQKRJGPAgAF6nzuamZn5jNMYn+zsbL3vZS+/pk2dOlWv+7Zs2fKMk5ie06dPIy4uDp9++qnoKAaruTO+uTSE7sc1iCQZY8eOFR3BqPXv3x8ymQwP+0zJN5oHY+H3dFVXV2P79u2Ii4tDeno6P5g8hEqlEh2BjAhnEIlIL0VFRXrfe38jXqKnKTk5GXFxcdi9ezdqa2uxcOFCTJ8+neczP0BSUhLmzJmD48eP63QYqKqqwpAhQxAbGwsfHx9BCckQsUAkSUtPT0dOTg5kMhl69+7NY+KIDFRpaSm2bNmC+Ph43Lp1C+PHj8eECRPg5eUFpVIJV1dX0REN1ujRo/HKK6/gvffea/L6Z599hiNHjmDv3r0tnIwMGQtEkqSSkhKMHz8eqamp6NixI4C7GwSGDBmC7du3o3v37mIDGoG8vDxs2LBBU2D36tULc+fOhYuLi+hoZILatGmDcePGYeLEifDz89Osp2vVqhULxIdQKBT46aef0Lt37yav5+bmYsSIESguLm7hZGTIHrxilciETZs2DXV1dcjJyUFFRQUqKiqQk5MDtVqNf/7zn6LjGbzvvvsObm5uyMjIQL9+/eDu7o7MzEy4ubnh22+/FR2PTJBCoUBKSgqOHTuG/Px80XGMSnl5uU6/yHtZWFjg6tWrLZiIjAE3qZAk/fLLL0hLS9Oa7XJxccGGDRvg7e0tMJlxWLRokeY813stW7YMixcvxrhx4wQlI1OVl5eH1NRUxMXFwdPTE87Ozpg4cSIA6N2dQKrs7e1x+vTpB67RzM7ORrdu3Vo4FRk6ziCSJDk4OKCurk5nvL6+Hvb29gISGZeysjJMnjxZZ3zixIkoKysTkIikwNvbG/Hx8SgtLcXMmTOxa9cuNDQ0YPbs2di0aRNnwR7A398f4eHhqK2t1blWU1ODZcuWISAgQEAyMmRcg0iStG/fPqxatQoxMTEYOHAgZDIZ0tPTMXfuXCxevJgtcR7C398f48aN0+nrt2XLFuzYsQMHDx4UlIykJicnB3Fxcfjqq69QUVHR5Ac/qSsvL4eHhwfMzc0xZ84cuLi4QCaTIScnBzExMWhoaEBmZiZsbW1FRyUDwgKRJMnGxga3b99GfX09LCzurrRo/P7+0wUqKipERDRosbGxCA8PxxtvvIF//OMfAIDjx4/j22+/RUREBOzs7DT38nQGagn19fXYv3+/5rSa1atXY+bMmZpNaFJXVFSEWbNm4eDBg5pepjKZDCNHjsTnn3+OHj16iA1IBocFIknS1q1b9b6Xh9vrau5EhnuxaTaJYmVlhaysLDg5OYmOYlBu3LiBgoICqNVq9OzZEzY2NqIjkYFigUhERCZHLpdDqVSyQCR6TNzFTJLV0NCAvXv3ajXKHjNmjOaRMxERkVTxnZAk6cyZMxgzZgzKyso0rW7y8/PRpUsX7N+/H3379hWc0PAlJiZi3bp1Wo2y58+fj+HDh4uORkRET4htbkiSpk+fjj59+qCkpASZmZnIzMzExYsX4e7ujnfffVd0PIMXHR2NV199FXK5HPPmzUNwcDCsrKzg7++P6Oho0fGIiOgJcQ0iSVLbtm2Rnp6OPn36aI2fOXMGnp6eqKmpEZTMONjb2yM0NBRz5szRGo+JicHKlStx+fJlQcmI7uIaRKInwxlEkiQXFxeUl5frjF+5cuWBpw3QX6qrq/Hqq6/qjI8YMQLV1dUCEhFp8/HxQdu2bUXHIDJaXINIkrRq1SoEBwdj+fLlWn38IiMj8dFHH2kVOVZWVqJiGqzRo0dj7969WLhwodb4vn378NprrwlKRVKhUqlQUFCAK1euQKVSaV17+eWXAQAJCQkiohGZDD5iJkm6t49f4zmu9zaPbfyZffyatmLFCnz88cfw9vaGl5cXgLsFdmpqKkJCQrSK6uDgYFExyQQdP34cEyZMQFFREe5/++LrlejpYYFIkpScnPzAa5mZmfDw8ND87Ovr2xKRjIqjo6Ne98lkMhQWFj7jNCQl/fv3h7OzMyIiItCtWzfNB7pG1tbWgpIRmRYWiEQAqqqq8M0332Dz5s1QKpWchSAyUO3bt4dSqeRaYaJnjJtUSNKSkpIwceJEdOvWDRs2bIC/vz/S09NFxyKiBxg8eDAKCgpExyAyedykQpJTUlKCL7/8EvHx8bh16xbeeOMN1NXVYffu3XB1dRUdz2iUlJRg//79KC4uxp07d7SuRUVFCUpFpm7u3LkICQlBWVkZ+vbti1atWmldd3d3F5SMyLTwETNJir+/P1JSUhAQEIC3334br776KszNzdGqVSsolUoWiHpKTEzE6NGj4ejoiLy8PLi5ueGPP/6AWq2Gh4cHkpKSREckE3XvBrNGMpmMm8qInjLOIJKkHDp0CMHBwZg1axZ69uwpOo7RCg0NRUhICCIjIyGXy7F792507dpVU3QTPSsXLlwQHYFIElggkqT88ssviI+Px6BBg9CrVy9MmjQJb775puhYRicnJwfbt28HAFhYWKCmpgYdOnRAZGQkxowZg1mzZglOSKZKoVCIjkAkCSwQSVK8vLzg5eWF9evXY8eOHYiPj8f7778PlUqFw4cPo3v37pDL5aJjGrz27dvjzz//BADY2dnh/PnzmmMLr127JjIaScTvv//e5PrX0aNHC0pEZFq4BpEkLy8vD3Fxcfjqq69QWVkJPz8/7N+/X3QsgzZ27FiMGjUKM2bMwKJFi7B3716888472LNnD2xsbPDzzz+LjkgmqrCwEIGBgTh9+rRm7SHwV4N7rkEkejrY5oYkz8XFBWvWrEFJSYnmsSk1LyoqCoMHDwYALF++HH5+fti5cycUCgXi4uIEpyNTNm/ePDg6OqK8vBzt2rXD2bNncezYMQwaNAhHjx4VHY/IZHAGkYiIjEbnzp2RlJQEd3d3WFtb4+TJk3BxcUFSUhJCQkJw6tQp0RGJTALXIBLRY8vIyEBOTg5kMhlcXV0xYMAA0ZHIxDU0NKBDhw4A7haLly9fhouLCxQKBfLy8gSnIzIdLBCJ6JFduXIFb731Fo4ePYqOHTtCrVajqqoKr7zyCnbs2IEuXbqIjkgmys3NDdnZ2XBycsLgwYOxZs0aWFpaYuPGjXBychIdj8hkcA0iET2yuXPnorq6GmfPnkVFRQVu3LiBM2fOoLq6GsHBwaLjkQlbunQpVCoVAGDFihUoKiqCj48PEhIS8NlnnwlOR2Q6uAaRiB6ZtbU1fv75Z3h6emqNnzx5EiNGjEBlZaWYYCRJFRUVsLGx0exkJqInx0fMRPTIVCqVzhm4ANCqVSvN7A7Rs1ZSUgKZTAZ7e3vRUYhMDh8xE9EjGzp0KObNm4fLly9rxi5duoT33nsPw4YNE5iMTJ1KpUJkZCSsra2hUCjg4OCAjh074oMPPuCHE6KniDOIRPTIoqOjMWbMGPTo0QPdu3eHTCZDcXEx+vbti6+//lp0PDJhS5YsQVxcHFavXg1vb2+o1WqkpqZi+fLlqK2txcqVK0VHJDIJXINIRI/t8OHDyM3NhVqthqurK4YPHy46Epk4Ozs7xMbG6hypt2/fPsyePRuXLl0SlIzItLBAJCK9JSUlYc6cOTh+/DisrKy0rlVVVWHIkCGIjY2Fj4+PoIRk6tq0aYPs7Gw4Oztrjefl5aF///6oqakRlIzItHANIhHp7dNPP8WMGTN0ikPg7s7mf/3rX4iKihKQjKSiX79+iI6O1hmPjo6Gu7u7gEREpokziESkN4VCgZ9++gm9e/du8npubi5GjBiB4uLiFk5GUpGcnIxRo0bBwcEBXl5ekMlkSEtLw8WLF5GQkMDZa6KnhDOIRKS38vLyJtvbNLKwsMDVq1dbMBFJja+vL/Lz8xEYGIjKykpUVFQgKCgIZ8+exZYtW0THIzIZnEEkIr09//zz+PjjjxEYGNjk9T179mDBggUoLCxs4WQkdUqlEh4eHmhoaBAdhcgkcAaRiPTm7++P8PBw1NbW6lyrqanBsmXLEBAQICAZERE9TZxBJCK9lZeXw8PDA+bm5pgzZw5cXFwgk8mQk5ODmJgYNDQ0IDMzE7a2tqKjksRwBpHo6WKjbCLSm62tLdLS0jBr1iyEhoai8fOlTCbDyJEj8fnnn7M4JCIyAZxBJKLHcuPGDRQUFECtVqNnz56wsbERHYlMWFBQULPXKysrkZyczBlEoqeEM4hE9FhsbGzg6ekpOgZJhLW19UOvT548uYXSEJk+ziASERERkRbuYiYiIiIiLSwQiYiIiEgLC0QiIiIi0sICkYiIiIi0sEAkIiIiIi0sEImIiIhICwtEIiIiItLCApGIiIiItPwfBTQJkYD4ZdUAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(correlation_matrix , annot = True,cmap = 'coolwarm')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 312,
   "id": "fb4e6d45-6c87-4bd3-9dd2-fc02fb2dc240",
   "metadata": {},
   "outputs": [],
   "source": [
    "avg_loan_taken_by_employed = df.groupby(\"Self_Employed\")[\"Loan_Amount_Term\"].mean().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 314,
   "id": "57fa5a14-56f6-4647-a2b8-bde91e33df8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No</td>\n",
       "      <td>342.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Yes</td>\n",
       "      <td>330.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Self_Employed  Loan_Amount_Term\n",
       "0            No             342.3\n",
       "1           Yes             330.0"
      ]
     },
     "execution_count": 314,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg_loan_taken_by_employed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "id": "e6f2f1c5-ec82-4dab-99c6-335eff4ca629",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x='Self_Employed',y='Loan_Amount_Term',data = avg_loan_taken_by_employed)\n",
    "plt.title(\"avg loan taken vs self employed \")\n",
    "plt.xlabel('self employed')\n",
    "plt.ylabel('loan taken')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "id": "01fd6148-707c-4af4-b381-98a1ccbff0ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1., 0.])"
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Credit_History'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "id": "8d95f0c0-c3fc-4a0f-be3a-00d02d72a27f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_ID</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Married</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>Education</th>\n",
       "      <th>Self_Employed</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>CoapplicantIncome</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Loan_Amount_Term</th>\n",
       "      <th>Credit_History</th>\n",
       "      <th>Property_Area</th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>LP001003</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>1</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>1508.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>LP001005</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LP001006</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2583</td>\n",
       "      <td>2358.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LP001008</td>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>LP001013</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2333</td>\n",
       "      <td>1516.0</td>\n",
       "      <td>95.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>LP002953</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>5703</td>\n",
       "      <td>0.0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>LP002974</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>3232</td>\n",
       "      <td>1950.0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>LP002978</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>2900</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>LP002979</td>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>3+</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>No</td>\n",
       "      <td>4106</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>LP002990</td>\n",
       "      <td>Female</td>\n",
       "      <td>No</td>\n",
       "      <td>0</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4583</td>\n",
       "      <td>0.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>360.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>Semiurban</td>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Loan_ID  Gender Married Dependents     Education Self_Employed  \\\n",
       "0    LP001003    Male     Yes          1      Graduate            No   \n",
       "1    LP001005    Male     Yes          0      Graduate           Yes   \n",
       "2    LP001006    Male     Yes          0  Not Graduate            No   \n",
       "3    LP001008    Male      No          0      Graduate            No   \n",
       "4    LP001013    Male     Yes          0  Not Graduate            No   \n",
       "..        ...     ...     ...        ...           ...           ...   \n",
       "376  LP002953    Male     Yes         3+      Graduate            No   \n",
       "377  LP002974    Male     Yes          0      Graduate            No   \n",
       "378  LP002978  Female      No          0      Graduate            No   \n",
       "379  LP002979    Male     Yes         3+      Graduate            No   \n",
       "380  LP002990  Female      No          0      Graduate           Yes   \n",
       "\n",
       "     ApplicantIncome  CoapplicantIncome  LoanAmount  Loan_Amount_Term  \\\n",
       "0               4583             1508.0       128.0             360.0   \n",
       "1               3000                0.0        66.0             360.0   \n",
       "2               2583             2358.0       120.0             360.0   \n",
       "3               6000                0.0       141.0             360.0   \n",
       "4               2333             1516.0        95.0             360.0   \n",
       "..               ...                ...         ...               ...   \n",
       "376             5703                0.0       128.0             360.0   \n",
       "377             3232             1950.0       108.0             360.0   \n",
       "378             2900                0.0        71.0             360.0   \n",
       "379             4106                0.0        40.0             180.0   \n",
       "380             4583                0.0       133.0             360.0   \n",
       "\n",
       "     Credit_History Property_Area Loan_Status  \n",
       "0               1.0         Rural           N  \n",
       "1               1.0         Urban           Y  \n",
       "2               1.0         Urban           Y  \n",
       "3               1.0         Urban           Y  \n",
       "4               1.0         Urban           Y  \n",
       "..              ...           ...         ...  \n",
       "376             1.0         Urban           Y  \n",
       "377             1.0         Rural           Y  \n",
       "378             1.0         Rural           Y  \n",
       "379             1.0         Rural           Y  \n",
       "380             0.0     Semiurban           N  \n",
       "\n",
       "[308 rows x 13 columns]"
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "id": "1dfa715a-43f4-4716-b6e2-6ce60e889b59",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df[['Married','ApplicantIncome','Education','LoanAmount','Credit_History']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "id": "254123a0-eab3-4f5d-920a-319ab2bd4792",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Married</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>Education</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Credit_History</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Yes</td>\n",
       "      <td>4583</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Yes</td>\n",
       "      <td>3000</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Yes</td>\n",
       "      <td>2583</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>No</td>\n",
       "      <td>6000</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>141.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Yes</td>\n",
       "      <td>2333</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>95.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>Yes</td>\n",
       "      <td>5703</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>Yes</td>\n",
       "      <td>3232</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>108.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>No</td>\n",
       "      <td>2900</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>71.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>Yes</td>\n",
       "      <td>4106</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>No</td>\n",
       "      <td>4583</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>133.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Married  ApplicantIncome     Education  LoanAmount  Credit_History\n",
       "0       Yes             4583      Graduate       128.0             1.0\n",
       "1       Yes             3000      Graduate        66.0             1.0\n",
       "2       Yes             2583  Not Graduate       120.0             1.0\n",
       "3        No             6000      Graduate       141.0             1.0\n",
       "4       Yes             2333  Not Graduate        95.0             1.0\n",
       "..      ...              ...           ...         ...             ...\n",
       "376     Yes             5703      Graduate       128.0             1.0\n",
       "377     Yes             3232      Graduate       108.0             1.0\n",
       "378      No             2900      Graduate        71.0             1.0\n",
       "379     Yes             4106      Graduate        40.0             1.0\n",
       "380      No             4583      Graduate       133.0             0.0\n",
       "\n",
       "[308 rows x 5 columns]"
      ]
     },
     "execution_count": 324,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "id": "801a6c93-ef06-45f7-8dea-5592f5cf5ae1",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = df[['Loan_Status']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "id": "e1f7bda8-64da-4b21-ad39-1982141ca9be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>N</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Loan_Status\n",
       "0             N\n",
       "1             Y\n",
       "2             Y\n",
       "3             Y\n",
       "4             Y\n",
       "..          ...\n",
       "376           Y\n",
       "377           Y\n",
       "378           Y\n",
       "379           Y\n",
       "380           N\n",
       "\n",
       "[308 rows x 1 columns]"
      ]
     },
     "execution_count": 328,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "id": "60132e4a-50b6-43b1-acc2-d2b82e8b315d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import preprocessing\n",
    "labelencoder = preprocessing.LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "id": "8294130b-86c0-495a-953c-59957bc272fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\dell\\AppData\\Local\\Temp\\ipykernel_9180\\3706250552.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  y['Loan_Status'] = labelencoder.fit_transform(y['Loan_Status'])\n"
     ]
    }
   ],
   "source": [
    "y['Loan_Status'] = labelencoder.fit_transform(y['Loan_Status'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "id": "ac2eb83d-6749-4998-bb92-ea6aedcd25c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loan_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Loan_Status\n",
       "0              0\n",
       "1              1\n",
       "2              1\n",
       "3              1\n",
       "4              1\n",
       "..           ...\n",
       "376            1\n",
       "377            1\n",
       "378            1\n",
       "379            1\n",
       "380            0\n",
       "\n",
       "[308 rows x 1 columns]"
      ]
     },
     "execution_count": 334,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "id": "a8b2380d-715a-4b35-9137-c94f8daf9d98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['N', 'Y'], dtype=object)"
      ]
     },
     "execution_count": 336,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labelencoder.classes_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "id": "e93cc672-50c5-4b32-b6da-5b762e8b8692",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\dell\\AppData\\Local\\Temp\\ipykernel_9180\\2741944212.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  X['Married'] = labelencoder.fit_transform(X['Married'])\n"
     ]
    }
   ],
   "source": [
    "X['Married'] = labelencoder.fit_transform(X['Married'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "id": "e1bdb636-b55a-4694-a56a-37fa6dead6dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Married</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>Education</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Credit_History</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>4583</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3000</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2583</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>6000</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>141.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2333</td>\n",
       "      <td>Not Graduate</td>\n",
       "      <td>95.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>1</td>\n",
       "      <td>5703</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>1</td>\n",
       "      <td>3232</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>108.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>0</td>\n",
       "      <td>2900</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>71.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>1</td>\n",
       "      <td>4106</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>0</td>\n",
       "      <td>4583</td>\n",
       "      <td>Graduate</td>\n",
       "      <td>133.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Married  ApplicantIncome     Education  LoanAmount  Credit_History\n",
       "0          1             4583      Graduate       128.0             1.0\n",
       "1          1             3000      Graduate        66.0             1.0\n",
       "2          1             2583  Not Graduate       120.0             1.0\n",
       "3          0             6000      Graduate       141.0             1.0\n",
       "4          1             2333  Not Graduate        95.0             1.0\n",
       "..       ...              ...           ...         ...             ...\n",
       "376        1             5703      Graduate       128.0             1.0\n",
       "377        1             3232      Graduate       108.0             1.0\n",
       "378        0             2900      Graduate        71.0             1.0\n",
       "379        1             4106      Graduate        40.0             1.0\n",
       "380        0             4583      Graduate       133.0             0.0\n",
       "\n",
       "[308 rows x 5 columns]"
      ]
     },
     "execution_count": 340,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "id": "87f402e1-ba5f-4ece-a400-d65e2136b597",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['No', 'Yes'], dtype=object)"
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labelencoder.classes_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "id": "61a75db4-e7c4-4a6b-a69c-b35c4d5d3b39",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\dell\\AppData\\Local\\Temp\\ipykernel_9180\\3386065747.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  X['Education'] = labelencoder.fit_transform(X['Education'])\n"
     ]
    }
   ],
   "source": [
    "X['Education'] = labelencoder.fit_transform(X['Education'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "id": "f244f01d-6586-4646-8d6d-f6b82689e85d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Married</th>\n",
       "      <th>ApplicantIncome</th>\n",
       "      <th>Education</th>\n",
       "      <th>LoanAmount</th>\n",
       "      <th>Credit_History</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>4583</td>\n",
       "      <td>0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3000</td>\n",
       "      <td>0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2583</td>\n",
       "      <td>1</td>\n",
       "      <td>120.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>6000</td>\n",
       "      <td>0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2333</td>\n",
       "      <td>1</td>\n",
       "      <td>95.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>1</td>\n",
       "      <td>5703</td>\n",
       "      <td>0</td>\n",
       "      <td>128.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>1</td>\n",
       "      <td>3232</td>\n",
       "      <td>0</td>\n",
       "      <td>108.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>0</td>\n",
       "      <td>2900</td>\n",
       "      <td>0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>1</td>\n",
       "      <td>4106</td>\n",
       "      <td>0</td>\n",
       "      <td>40.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>380</th>\n",
       "      <td>0</td>\n",
       "      <td>4583</td>\n",
       "      <td>0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>308 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Married  ApplicantIncome  Education  LoanAmount  Credit_History\n",
       "0          1             4583          0       128.0             1.0\n",
       "1          1             3000          0        66.0             1.0\n",
       "2          1             2583          1       120.0             1.0\n",
       "3          0             6000          0       141.0             1.0\n",
       "4          1             2333          1        95.0             1.0\n",
       "..       ...              ...        ...         ...             ...\n",
       "376        1             5703          0       128.0             1.0\n",
       "377        1             3232          0       108.0             1.0\n",
       "378        0             2900          0        71.0             1.0\n",
       "379        1             4106          0        40.0             1.0\n",
       "380        0             4583          0       133.0             0.0\n",
       "\n",
       "[308 rows x 5 columns]"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "id": "0e0108d8-32ef-4e6c-8efc-0aef673d9b33",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "scaler = StandardScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 350,
   "id": "a34e4e4f-168d-47c7-8c48-b6fb4cde978f",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = scaler.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "id": "7c0c81e2-75f2-483f-9df6-63669fb9d232",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.81539246,  0.67389339, -0.58734842,  0.79689813,  0.41364557],\n",
       "       [ 0.81539246, -0.41036528, -0.58734842, -1.31665281,  0.41364557],\n",
       "       [ 0.81539246, -0.6959849 ,  1.70256694,  0.52418188,  0.41364557],\n",
       "       ...,\n",
       "       [-1.22640329, -0.47885919, -0.58734842, -1.14620515,  0.41364557],\n",
       "       [ 0.81539246,  0.34717742, -0.58734842, -2.20298062,  0.41364557],\n",
       "       [-1.22640329,  0.67389339, -0.58734842,  0.96734579, -2.41752858]])"
      ]
     },
     "execution_count": 352,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "id": "ff14c873-cf84-452b-be64-4d4e4bf2d69d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "id": "de4e8550-1232-47c1-81dd-dd5266845e2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "id": "1b6a5b24-f109-4263-957d-a94a059de0ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "def model_performance(Predictions):\n",
    "    print(\"The accuracy score of the model is {}\" ,format(accuracy_score(y_test,Predictions))) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "id": "215bdc3f-980f-4922-902f-72d72ab61902",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "id": "a0f9b2bd-20e7-4b01-a8a1-863a6545b95e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\dell\\anaconda3\\Lib\\site-packages\\sklearn\\utils\\validation.py:1143: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "log_model = LogisticRegression()\n",
    "log_model.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "id": "34913751-7aa4-4f73-8da6-cdb2aaf3602c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.22640329,  0.17731251, -0.58734842, -0.97575749,  0.41364557],\n",
       "       [ 0.81539246, -1.78024356, -0.58734842,  0.18328657,  0.41364557],\n",
       "       [ 0.81539246, -0.30145995, -0.58734842,  0.11510751,  0.41364557],\n",
       "       ...,\n",
       "       [ 0.81539246,  0.04648913, -0.58734842,  1.34233063,  0.41364557],\n",
       "       [ 0.81539246, -0.55762719, -0.58734842,  0.18328657,  0.41364557],\n",
       "       [ 0.81539246, -1.08571527, -0.58734842,  0.28555516,  0.41364557]])"
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "id": "a29142f6-8888-400c-8eb5-2117199d0c92",
   "metadata": {},
   "outputs": [],
   "source": [
    "log_pred = log_model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "id": "84fe7b14-bffd-432a-8649-01ad1f312e4c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy score of the model is {} 0.8548387096774194\n"
     ]
    }
   ],
   "source": [
    "model_performance(log_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "id": "6fcbd877-314b-4c9c-af91-a8f1287fd688",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=KNeighborsClassifier(),\n",
       "             param_grid={&#x27;n_neighbors&#x27;: [3, 5, 7],\n",
       "                         &#x27;weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=KNeighborsClassifier(),\n",
       "             param_grid={&#x27;n_neighbors&#x27;: [3, 5, 7],\n",
       "                         &#x27;weights&#x27;: [&#x27;uniform&#x27;, &#x27;distance&#x27;]})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "GridSearchCV(estimator=KNeighborsClassifier(),\n",
       "             param_grid={'n_neighbors': [3, 5, 7],\n",
       "                         'weights': ['uniform', 'distance']})"
      ]
     },
     "execution_count": 370,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "param_grid = {'n_neighbors':[3,5,7],\n",
    "              'weights':['uniform','distance']}\n",
    "gridkn = GridSearchCV(KNeighborsClassifier(),param_grid)\n",
    "gridkn.fit(X_train,y_train.values.ravel())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "id": "a0d53332-cf63-462f-b723-be83109989a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_neighbors': 3, 'weights': 'uniform'}"
      ]
     },
     "execution_count": 372,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gridkn.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "id": "518643de-b4d5-4a92-8198-cf705d54651b",
   "metadata": {},
   "outputs": [],
   "source": [
    "knpreds = gridkn.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "id": "591b53f9-6307-4613-a8b8-0e640cc69d65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy score of the model is {} 0.7741935483870968\n"
     ]
    }
   ],
   "source": [
    "model_performance(knpreds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44b7e0c9-e5f8-4bd4-bc41-ab7f12319148",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8abc389d-1fe1-41c5-9405-ae991fc9384d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93c6e840-c4aa-4222-ae3a-2174e04d4711",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
